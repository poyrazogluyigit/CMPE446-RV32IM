

================================================================
== Vitis HLS Report for 'hart'
================================================================
* Date:           Sun Apr 14 20:14:17 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        assignment
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7vx550t-ffg1927-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.659 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        2|        5|  20.000 ns|  50.000 ns|    3|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 4 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.65>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 0"   --->   Operation 6 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%spectopmodule_ln4 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [hart.cpp:4]   --->   Operation 7 'spectopmodule' 'spectopmodule_ln4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %inst"   --->   Operation 8 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %inst, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %pc"   --->   Operation 10 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %pc, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%pc_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %pc" [hart.cpp:4]   --->   Operation 12 'read' 'pc_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%inst_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %inst" [hart.cpp:4]   --->   Operation 13 'read' 'inst_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%opcode = trunc i32 %inst_read" [hart.cpp:22]   --->   Operation 14 'trunc' 'opcode' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%rd = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %inst_read, i32 7, i32 11" [hart.cpp:23]   --->   Operation 15 'partselect' 'rd' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%rs1 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %inst_read, i32 15, i32 19" [hart.cpp:24]   --->   Operation 16 'partselect' 'rs1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%rs2 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %inst_read, i32 20, i32 24" [hart.cpp:25]   --->   Operation 17 'partselect' 'rs2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%func3 = partselect i3 @_ssdm_op_PartSelect.i3.i32.i32.i32, i32 %inst_read, i32 12, i32 14" [hart.cpp:26]   --->   Operation 18 'partselect' 'func3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%func7 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %inst_read, i32 25, i32 31" [hart.cpp:27]   --->   Operation 19 'partselect' 'func7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%imm_31_12 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %inst_read, i32 12, i32 31" [hart.cpp:29]   --->   Operation 20 'partselect' 'imm_31_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i20 %imm_31_12" [hart.cpp:29]   --->   Operation 21 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.57ns)   --->   "%switch_ln36 = switch i7 %opcode, void %sw.default, i7 99, void %sw.bb, i7 55, void %sw.bb55, i7 23, void %sw.bb59, i7 111, void %sw.bb66, i7 103, void %sw.bb73" [hart.cpp:36]   --->   Operation 22 'switch' 'switch_ln36' <Predicate = true> <Delay = 1.57>
ST_1 : Operation 23 [1/1] (1.18ns)   --->   "%icmp_ln41 = icmp_eq  i3 %func3, i3 0" [hart.cpp:41]   --->   Operation 23 'icmp' 'icmp_ln41' <Predicate = (opcode == 103)> <Delay = 1.18> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (1.05ns)   --->   "%br_ln41 = br i1 %icmp_ln41, void %sw.epilog, void %if.else" [hart.cpp:41]   --->   Operation 24 'br' 'br_ln41' <Predicate = (opcode == 103)> <Delay = 1.05>
ST_1 : Operation 25 [1/1] (1.63ns)   --->   "%t = add i32 %pc_read, i32 4" [hart.cpp:43]   --->   Operation 25 'add' 't' <Predicate = (opcode == 103 & icmp_ln41)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i5 %rd" [hart.cpp:46]   --->   Operation 26 'zext' 'zext_ln46' <Predicate = (opcode == 103 & icmp_ln41)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%rf_addr_6 = getelementptr i32 %rf, i64 0, i64 %zext_ln46" [hart.cpp:46]   --->   Operation 27 'getelementptr' 'rf_addr_6' <Predicate = (opcode == 103 & icmp_ln41)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (2.66ns)   --->   "%store_ln46 = store i32 %t, i5 %rf_addr_6" [hart.cpp:46]   --->   Operation 28 'store' 'store_ln46' <Predicate = (opcode == 103 & icmp_ln41)> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 29 [1/1] (1.05ns)   --->   "%br_ln0 = br void %sw.epilog"   --->   Operation 29 'br' 'br_ln0' <Predicate = (opcode == 103 & icmp_ln41)> <Delay = 1.05>
ST_1 : Operation 30 [1/1] (1.63ns)   --->   "%add_ln40 = add i32 %pc_read, i32 4" [hart.cpp:40]   --->   Operation 30 'add' 'add_ln40' <Predicate = (opcode == 111)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln40 = zext i5 %rd" [hart.cpp:40]   --->   Operation 31 'zext' 'zext_ln40' <Predicate = (opcode == 111)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%rf_addr_5 = getelementptr i32 %rf, i64 0, i64 %zext_ln40" [hart.cpp:40]   --->   Operation 32 'getelementptr' 'rf_addr_5' <Predicate = (opcode == 111)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (2.66ns)   --->   "%store_ln40 = store i32 %add_ln40, i5 %rf_addr_5" [hart.cpp:40]   --->   Operation 33 'store' 'store_ln40' <Predicate = (opcode == 111)> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 34 [1/1] (1.05ns)   --->   "%br_ln40 = br void %sw.epilog" [hart.cpp:40]   --->   Operation 34 'br' 'br_ln40' <Predicate = (opcode == 111)> <Delay = 1.05>
ST_1 : Operation 35 [1/1] (1.63ns)   --->   "%add_ln39 = add i32 %pc_read, i32 12" [hart.cpp:39]   --->   Operation 35 'add' 'add_ln39' <Predicate = (opcode == 23)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (2.36ns)   --->   "%shl_ln39 = shl i32 %sext_ln29, i32 %add_ln39" [hart.cpp:39]   --->   Operation 36 'shl' 'shl_ln39' <Predicate = (opcode == 23)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i5 %rd" [hart.cpp:39]   --->   Operation 37 'zext' 'zext_ln39' <Predicate = (opcode == 23)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%rf_addr_4 = getelementptr i32 %rf, i64 0, i64 %zext_ln39" [hart.cpp:39]   --->   Operation 38 'getelementptr' 'rf_addr_4' <Predicate = (opcode == 23)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (2.66ns)   --->   "%store_ln39 = store i32 %shl_ln39, i5 %rf_addr_4" [hart.cpp:39]   --->   Operation 39 'store' 'store_ln39' <Predicate = (opcode == 23)> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 40 [1/1] (1.05ns)   --->   "%br_ln39 = br void %sw.epilog" [hart.cpp:39]   --->   Operation 40 'br' 'br_ln39' <Predicate = (opcode == 23)> <Delay = 1.05>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %imm_31_12, i12 0" [hart.cpp:38]   --->   Operation 41 'bitconcatenate' 'shl_ln' <Predicate = (opcode == 55)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i5 %rd" [hart.cpp:38]   --->   Operation 42 'zext' 'zext_ln38' <Predicate = (opcode == 55)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%rf_addr_3 = getelementptr i32 %rf, i64 0, i64 %zext_ln38" [hart.cpp:38]   --->   Operation 43 'getelementptr' 'rf_addr_3' <Predicate = (opcode == 55)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (2.66ns)   --->   "%store_ln38 = store i32 %shl_ln, i5 %rf_addr_3" [hart.cpp:38]   --->   Operation 44 'store' 'store_ln38' <Predicate = (opcode == 55)> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 45 [1/1] (1.05ns)   --->   "%br_ln38 = br void %sw.epilog" [hart.cpp:38]   --->   Operation 45 'br' 'br_ln38' <Predicate = (opcode == 55)> <Delay = 1.05>
ST_1 : Operation 46 [1/1] (1.56ns)   --->   "%switch_ln8 = switch i3 %func3, void %sw.epilog, i3 0, void %sw.bb.i, i3 1, void %sw.bb2.i, i3 4, void %sw.bb8.i, i3 5, void %sw.bb14.i, i3 6, void %sw.bb20.i" [OP_AL_B.cpp:8->hart.cpp:37]   --->   Operation 46 'switch' 'switch_ln8' <Predicate = (opcode == 99)> <Delay = 1.56>
ST_1 : Operation 47 [1/1] (1.05ns)   --->   "%br_ln13 = br void %sw.epilog" [OP_AL_B.cpp:13->hart.cpp:37]   --->   Operation 47 'br' 'br_ln13' <Predicate = (opcode == 99 & func3 == 6)> <Delay = 1.05>
ST_1 : Operation 48 [1/1] (1.05ns)   --->   "%br_ln12 = br void %sw.epilog" [OP_AL_B.cpp:12->hart.cpp:37]   --->   Operation 48 'br' 'br_ln12' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 1.05>
ST_1 : Operation 49 [1/1] (1.05ns)   --->   "%br_ln11 = br void %sw.epilog" [OP_AL_B.cpp:11->hart.cpp:37]   --->   Operation 49 'br' 'br_ln11' <Predicate = (opcode == 99 & func3 == 4)> <Delay = 1.05>
ST_1 : Operation 50 [1/1] (1.05ns)   --->   "%br_ln10 = br void %sw.epilog" [OP_AL_B.cpp:10->hart.cpp:37]   --->   Operation 50 'br' 'br_ln10' <Predicate = (opcode == 99 & func3 == 1)> <Delay = 1.05>
ST_1 : Operation 51 [1/1] (1.05ns)   --->   "%br_ln9 = br void %sw.epilog" [OP_AL_B.cpp:9->hart.cpp:37]   --->   Operation 51 'br' 'br_ln9' <Predicate = (opcode == 99 & func3 == 0)> <Delay = 1.05>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i5 %rs1" [hart.cpp:49]   --->   Operation 52 'zext' 'zext_ln49' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%rf_addr = getelementptr i32 %rf, i64 0, i64 %zext_ln49" [hart.cpp:49]   --->   Operation 53 'getelementptr' 'rf_addr' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_1 : Operation 54 [2/2] (2.66ns)   --->   "%rf_load = load i5 %rf_addr" [hart.cpp:49]   --->   Operation 54 'load' 'rf_load' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln49_1 = zext i5 %rs2" [hart.cpp:49]   --->   Operation 55 'zext' 'zext_ln49_1' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%rf_addr_1 = getelementptr i32 %rf, i64 0, i64 %zext_ln49_1" [hart.cpp:49]   --->   Operation 56 'getelementptr' 'rf_addr_1' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_1 : Operation 57 [2/2] (2.66ns)   --->   "%rf_load_1 = load i5 %rf_addr_1" [hart.cpp:49]   --->   Operation 57 'load' 'rf_load_1' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 2 <SV = 1> <Delay = 2.66>
ST_2 : Operation 58 [1/2] (2.66ns)   --->   "%rf_load = load i5 %rf_addr" [hart.cpp:49]   --->   Operation 58 'load' 'rf_load' <Predicate = true> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 59 [1/2] (2.66ns)   --->   "%rf_load_1 = load i5 %rf_addr_1" [hart.cpp:49]   --->   Operation 59 'load' 'rf_load_1' <Predicate = true> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 3 <SV = 2> <Delay = 5.90>
ST_3 : Operation 60 [2/2] (5.90ns)   --->   "%call_ret = call i33 @OP_AL_32I, i7 %opcode, i7 %func7, i3 %func3, i32 %rf_load, i32 %rf_load_1" [hart.cpp:49]   --->   Operation 60 'call' 'call_ret' <Predicate = true> <Delay = 5.90> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 5.23>
ST_4 : Operation 61 [1/2] (2.56ns)   --->   "%call_ret = call i33 @OP_AL_32I, i7 %opcode, i7 %func7, i3 %func3, i32 %rf_load, i32 %rf_load_1" [hart.cpp:49]   --->   Operation 61 'call' 'call_ret' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 2.56> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%atmp_value = extractvalue i33 %call_ret" [hart.cpp:49]   --->   Operation 62 'extractvalue' 'atmp_value' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%atmp_valid = extractvalue i33 %call_ret" [hart.cpp:49]   --->   Operation 63 'extractvalue' 'atmp_valid' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln49_2 = zext i5 %rd" [hart.cpp:49]   --->   Operation 64 'zext' 'zext_ln49_2' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%rf_addr_2 = getelementptr i32 %rf, i64 0, i64 %zext_ln49_2" [hart.cpp:49]   --->   Operation 65 'getelementptr' 'rf_addr_2' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (2.66ns)   --->   "%store_ln49 = store i32 %atmp_value, i5 %rf_addr_2" [hart.cpp:49]   --->   Operation 66 'store' 'store_ln49' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 67 [1/1] (1.05ns)   --->   "%br_ln49 = br void %sw.epilog" [hart.cpp:49]   --->   Operation 67 'br' 'br_ln49' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 1.05>

State 5 <SV = 4> <Delay = 2.66>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%status_1 = phi i1 %atmp_valid, void %sw.default, i1 0, void %sw.bb66, i1 0, void %sw.bb59, i1 0, void %sw.bb55, i1 0, void %if.else, i1 0, void %sw.bb20.i, i1 0, void %sw.bb14.i, i1 0, void %sw.bb8.i, i1 0, void %sw.bb2.i, i1 0, void %sw.bb.i, i1 1, void %sw.bb, i1 1, void %sw.bb73"   --->   Operation 68 'phi' 'status_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (1.63ns)   --->   "%next_pc = add i32 %pc_read, i32 4" [hart.cpp:53]   --->   Operation 69 'add' 'next_pc' <Predicate = true> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (2.66ns)   --->   "%store_ln57 = store i32 0, i32 0" [hart.cpp:57]   --->   Operation 70 'store' 'store_ln57' <Predicate = true> <Delay = 2.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i1.i32, i1 %status_1, i32 %next_pc" [hart.cpp:60]   --->   Operation 71 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i33 %tmp_1" [hart.cpp:60]   --->   Operation 72 'zext' 'zext_ln60' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%ret_ln60 = ret i64 %zext_ln60" [hart.cpp:60]   --->   Operation 73 'ret' 'ret_ln60' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.659ns
The critical path consists of the following:
	wire read operation ('pc_read', hart.cpp:4) on port 'pc' (hart.cpp:4) [10]  (0.000 ns)
	'add' operation 32 bit ('add_ln39', hart.cpp:39) [37]  (1.631 ns)
	'shl' operation 32 bit ('shl_ln39', hart.cpp:39) [38]  (2.364 ns)
	'store' operation 0 bit ('store_ln39', hart.cpp:39) of variable 'shl_ln39', hart.cpp:39 on array 'rf' [41]  (2.664 ns)

 <State 2>: 2.664ns
The critical path consists of the following:
	'load' operation 32 bit ('rf_load', hart.cpp:49) on array 'rf' [64]  (2.664 ns)

 <State 3>: 5.908ns
The critical path consists of the following:
	'call' operation 33 bit ('call_ret', hart.cpp:49) to 'OP_AL_32I' [68]  (5.908 ns)

 <State 4>: 5.233ns
The critical path consists of the following:
	'call' operation 33 bit ('call_ret', hart.cpp:49) to 'OP_AL_32I' [68]  (2.569 ns)
	'store' operation 0 bit ('store_ln49', hart.cpp:49) of variable 'atmp.value', hart.cpp:49 on array 'rf' [73]  (2.664 ns)

 <State 5>: 2.664ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln57', hart.cpp:57) of constant 0 on array 'rf' [78]  (2.664 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
