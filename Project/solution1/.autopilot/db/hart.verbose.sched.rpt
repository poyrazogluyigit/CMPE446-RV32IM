

================================================================
== Vitis HLS Report for 'hart'
================================================================
* Date:           Fri Apr 19 20:10:58 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        Project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.010 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.00>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%op2_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op2_val" [hart.cpp:17]   --->   Operation 2 'read' 'op2_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%op1_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op1_val" [hart.cpp:17]   --->   Operation 3 'read' 'op1_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%pc_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %pc_val" [hart.cpp:17]   --->   Operation 4 'read' 'pc_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%inst_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %inst_val" [hart.cpp:17]   --->   Operation 5 'read' 'inst_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%opcode = trunc i32 %inst_val_read" [hart.cpp:17]   --->   Operation 6 'trunc' 'opcode' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%func3 = partselect i3 @_ssdm_op_PartSelect.i3.i32.i32.i32, i32 %inst_val_read, i32 12, i32 14" [hart.cpp:18]   --->   Operation 7 'partselect' 'func3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tmp2 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %inst_val_read, i32 25, i32 31" [hart.cpp:19]   --->   Operation 8 'partselect' 'tmp2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%imm_31_12 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %inst_val_read, i32 12, i32 31" [hart.cpp:21]   --->   Operation 9 'partselect' 'imm_31_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sext_ln21 = sext i20 %imm_31_12" [hart.cpp:21]   --->   Operation 10 'sext' 'sext_ln21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %inst_val_read, i32 31" [hart.cpp:22]   --->   Operation 11 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %inst_val_read, i32 7" [hart.cpp:22]   --->   Operation 12 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_s = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %inst_val_read, i32 25, i32 30" [hart.cpp:22]   --->   Operation 13 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i4 @_ssdm_op_PartSelect.i4.i32.i32.i32, i32 %inst_val_read, i32 8, i32 11" [hart.cpp:22]   --->   Operation 14 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%imm = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i1.i1.i6.i4.i1, i1 %tmp, i1 %tmp_1, i6 %tmp_s, i4 %tmp_2, i1 0" [hart.cpp:22]   --->   Operation 15 'bitconcatenate' 'imm' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %inst_val_read, i32 12, i32 19" [hart.cpp:23]   --->   Operation 16 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %inst_val_read, i32 20" [hart.cpp:23]   --->   Operation 17 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %inst_val_read, i32 21, i32 30" [hart.cpp:23]   --->   Operation 18 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i21 @_ssdm_op_BitConcatenate.i21.i1.i8.i1.i10.i1, i1 %tmp, i8 %tmp_3, i1 %tmp_4, i10 %tmp_5, i1 0" [hart.cpp:23]   --->   Operation 19 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln27 = sext i21 %shl_ln" [hart.cpp:27]   --->   Operation 20 'sext' 'sext_ln27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.70ns)   --->   "%switch_ln27 = switch i7 %opcode, void %sw.default, i7 99, void %sw.bb, i7 55, void %sw.bb41, i7 23, void %sw.bb45, i7 111, void %sw.bb55, i7 103, void %sw.bb62" [hart.cpp:27]   --->   Operation 21 'switch' 'switch_ln27' <Predicate = true> <Delay = 0.70>
ST_1 : Operation 22 [1/1] (0.61ns)   --->   "%icmp_ln32 = icmp_eq  i3 %func3, i3 0" [hart.cpp:32]   --->   Operation 22 'icmp' 'icmp_ln32' <Predicate = (opcode == 103)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.95ns)   --->   "%add_ln33 = add i32 %pc_val_read, i32 4" [hart.cpp:33]   --->   Operation 23 'add' 'add_ln33' <Predicate = (opcode == 103)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %inst_val_read, i32 20, i32 31" [hart.cpp:34]   --->   Operation 24 'partselect' 'tmp_6' <Predicate = (opcode == 103)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i12 %tmp_6" [hart.cpp:34]   --->   Operation 25 'zext' 'zext_ln34' <Predicate = (opcode == 103)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.95ns)   --->   "%add_ln34 = add i32 %zext_ln34, i32 %op1_val_read" [hart.cpp:34]   --->   Operation 26 'add' 'add_ln34' <Predicate = (opcode == 103)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_7 = bitset i32 @_ssdm_op_BitSet.i32.i32.i32.i1, i32 %add_ln34, i32 0, i1 0" [hart.cpp:35]   --->   Operation 27 'bitset' 'tmp_7' <Predicate = (opcode == 103)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.71ns)   --->   "%br_ln36 = br void %sw.epilog" [hart.cpp:36]   --->   Operation 28 'br' 'br_ln36' <Predicate = (opcode == 103)> <Delay = 0.71>
ST_1 : Operation 29 [1/1] (0.95ns)   --->   "%add_ln31 = add i32 %pc_val_read, i32 4" [hart.cpp:31]   --->   Operation 29 'add' 'add_ln31' <Predicate = (opcode == 111)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.71ns)   --->   "%br_ln31 = br void %sw.epilog" [hart.cpp:31]   --->   Operation 30 'br' 'br_ln31' <Predicate = (opcode == 111)> <Delay = 0.71>
ST_1 : Operation 31 [1/1] (0.95ns)   --->   "%add_ln30 = add i32 %pc_val_read, i32 12" [hart.cpp:30]   --->   Operation 31 'add' 'add_ln30' <Predicate = (opcode == 23)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.18ns)   --->   "%shl_ln30 = shl i32 %sext_ln21, i32 %add_ln30" [hart.cpp:30]   --->   Operation 32 'shl' 'shl_ln30' <Predicate = (opcode == 23)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.71ns)   --->   "%br_ln30 = br void %sw.epilog" [hart.cpp:30]   --->   Operation 33 'br' 'br_ln30' <Predicate = (opcode == 23)> <Delay = 0.71>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %imm_31_12, i12 0" [hart.cpp:29]   --->   Operation 34 'bitconcatenate' 'shl_ln1' <Predicate = (opcode == 55)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.71ns)   --->   "%br_ln29 = br void %sw.epilog" [hart.cpp:29]   --->   Operation 35 'br' 'br_ln29' <Predicate = (opcode == 55)> <Delay = 0.71>
ST_1 : Operation 36 [1/1] (0.71ns)   --->   "%switch_ln8 = switch i3 %func3, void %sw.epilog, i3 0, void %sw.bb.i, i3 1, void %sw.bb2.i, i3 4, void %sw.bb8.i, i3 5, void %sw.bb14.i, i3 6, void %sw.bb20.i, i3 7, void %sw.bb28.i" [OP_AL_B.cpp:8->hart.cpp:28]   --->   Operation 36 'switch' 'switch_ln8' <Predicate = (opcode == 99)> <Delay = 0.71>
ST_1 : Operation 37 [1/1] (0.95ns)   --->   "%icmp_ln14 = icmp_ult  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_B.cpp:14->hart.cpp:28]   --->   Operation 37 'icmp' 'icmp_ln14' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node mdf_5)   --->   "%xor_ln14 = xor i1 %icmp_ln14, i1 1" [OP_AL_B.cpp:14->hart.cpp:28]   --->   Operation 38 'xor' 'xor_ln14' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node mdf_5)   --->   "%shl_ln3 = bitconcatenate i14 @_ssdm_op_BitConcatenate.i14.i1.i1.i6.i4.i2, i1 %tmp, i1 %tmp_1, i6 %tmp_s, i4 %tmp_2, i2 0" [OP_AL_B.cpp:14->hart.cpp:28]   --->   Operation 39 'bitconcatenate' 'shl_ln3' <Predicate = (opcode == 99 & func3 == 7 & xor_ln14)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.42ns) (out node of the LUT)   --->   "%mdf_5 = select i1 %xor_ln14, i14 %shl_ln3, i14 4" [OP_AL_B.cpp:14->hart.cpp:28]   --->   Operation 40 'select' 'mdf_5' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln5_5 = sext i14 %mdf_5" [OP_AL_B.cpp:5->hart.cpp:28]   --->   Operation 41 'sext' 'sext_ln5_5' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.71ns)   --->   "%br_ln14 = br void %sw.epilog" [OP_AL_B.cpp:14->hart.cpp:28]   --->   Operation 42 'br' 'br_ln14' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.71>
ST_1 : Operation 43 [1/1] (0.95ns)   --->   "%icmp_ln13 = icmp_ult  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_B.cpp:13->hart.cpp:28]   --->   Operation 43 'icmp' 'icmp_ln13' <Predicate = (opcode == 99 & func3 == 6)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%shl_ln2 = bitconcatenate i14 @_ssdm_op_BitConcatenate.i14.i1.i1.i6.i4.i2, i1 %tmp, i1 %tmp_1, i6 %tmp_s, i4 %tmp_2, i2 0" [OP_AL_B.cpp:13->hart.cpp:28]   --->   Operation 44 'bitconcatenate' 'shl_ln2' <Predicate = (opcode == 99 & func3 == 6 & icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%mdf_4 = select i1 %icmp_ln13, i14 %shl_ln2, i14 4" [OP_AL_B.cpp:13->hart.cpp:28]   --->   Operation 45 'select' 'mdf_4' <Predicate = (opcode == 99 & func3 == 6)> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%sext_ln5_4 = sext i14 %mdf_4" [OP_AL_B.cpp:5->hart.cpp:28]   --->   Operation 46 'sext' 'sext_ln5_4' <Predicate = (opcode == 99 & func3 == 6)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.71ns)   --->   "%br_ln13 = br void %sw.epilog" [OP_AL_B.cpp:13->hart.cpp:28]   --->   Operation 47 'br' 'br_ln13' <Predicate = (opcode == 99 & func3 == 6)> <Delay = 0.71>
ST_1 : Operation 48 [1/1] (0.95ns)   --->   "%icmp_ln12 = icmp_slt  i32 %op2_val_read, i32 %op1_val_read" [OP_AL_B.cpp:12->hart.cpp:28]   --->   Operation 48 'icmp' 'icmp_ln12' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node mdf_3)   --->   "%xor_ln12 = xor i1 %icmp_ln12, i1 1" [OP_AL_B.cpp:12->hart.cpp:28]   --->   Operation 49 'xor' 'xor_ln12' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.38ns) (out node of the LUT)   --->   "%mdf_3 = select i1 %xor_ln12, i13 %imm, i13 4" [OP_AL_B.cpp:12->hart.cpp:28]   --->   Operation 50 'select' 'mdf_3' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln5_3 = sext i13 %mdf_3" [OP_AL_B.cpp:5->hart.cpp:28]   --->   Operation 51 'sext' 'sext_ln5_3' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.71ns)   --->   "%br_ln12 = br void %sw.epilog" [OP_AL_B.cpp:12->hart.cpp:28]   --->   Operation 52 'br' 'br_ln12' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.71>
ST_1 : Operation 53 [1/1] (0.95ns)   --->   "%icmp_ln11 = icmp_slt  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_B.cpp:11->hart.cpp:28]   --->   Operation 53 'icmp' 'icmp_ln11' <Predicate = (opcode == 99 & func3 == 4)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.38ns)   --->   "%mdf_2 = select i1 %icmp_ln11, i13 %imm, i13 4" [OP_AL_B.cpp:11->hart.cpp:28]   --->   Operation 54 'select' 'mdf_2' <Predicate = (opcode == 99 & func3 == 4)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln5_2 = sext i13 %mdf_2" [OP_AL_B.cpp:5->hart.cpp:28]   --->   Operation 55 'sext' 'sext_ln5_2' <Predicate = (opcode == 99 & func3 == 4)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.71ns)   --->   "%br_ln11 = br void %sw.epilog" [OP_AL_B.cpp:11->hart.cpp:28]   --->   Operation 56 'br' 'br_ln11' <Predicate = (opcode == 99 & func3 == 4)> <Delay = 0.71>
ST_1 : Operation 57 [1/1] (0.95ns)   --->   "%icmp_ln10 = icmp_ne  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_B.cpp:10->hart.cpp:28]   --->   Operation 57 'icmp' 'icmp_ln10' <Predicate = (opcode == 99 & func3 == 1)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.38ns)   --->   "%mdf_1 = select i1 %icmp_ln10, i13 %imm, i13 4" [OP_AL_B.cpp:10->hart.cpp:28]   --->   Operation 58 'select' 'mdf_1' <Predicate = (opcode == 99 & func3 == 1)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%sext_ln5_1 = sext i13 %mdf_1" [OP_AL_B.cpp:5->hart.cpp:28]   --->   Operation 59 'sext' 'sext_ln5_1' <Predicate = (opcode == 99 & func3 == 1)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.71ns)   --->   "%br_ln10 = br void %sw.epilog" [OP_AL_B.cpp:10->hart.cpp:28]   --->   Operation 60 'br' 'br_ln10' <Predicate = (opcode == 99 & func3 == 1)> <Delay = 0.71>
ST_1 : Operation 61 [1/1] (0.95ns)   --->   "%icmp_ln9 = icmp_eq  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_B.cpp:9->hart.cpp:28]   --->   Operation 61 'icmp' 'icmp_ln9' <Predicate = (opcode == 99 & func3 == 0)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.38ns)   --->   "%mdf = select i1 %icmp_ln9, i13 %imm, i13 4" [OP_AL_B.cpp:9->hart.cpp:28]   --->   Operation 62 'select' 'mdf' <Predicate = (opcode == 99 & func3 == 0)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%sext_ln5 = sext i13 %mdf" [OP_AL_B.cpp:5->hart.cpp:28]   --->   Operation 63 'sext' 'sext_ln5' <Predicate = (opcode == 99 & func3 == 0)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.71ns)   --->   "%br_ln9 = br void %sw.epilog" [OP_AL_B.cpp:9->hart.cpp:28]   --->   Operation 64 'br' 'br_ln9' <Predicate = (opcode == 99 & func3 == 0)> <Delay = 0.71>
ST_1 : Operation 65 [1/1] (3.59ns)   --->   "%call_ret = call i33 @OP_AL_32I, i32 %inst_val_read, i7 %tmp2, i3 %func3, i32 %op1_val_read, i32 %op2_val_read" [hart.cpp:38]   --->   Operation 65 'call' 'call_ret' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 3.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%newret = extractvalue i33 %call_ret" [hart.cpp:38]   --->   Operation 66 'extractvalue' 'newret' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%newret1 = extractvalue i33 %call_ret" [hart.cpp:38]   --->   Operation 67 'extractvalue' 'newret1' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.71ns)   --->   "%br_ln38 = br void %sw.epilog" [hart.cpp:38]   --->   Operation 68 'br' 'br_ln38' <Predicate = (opcode != 99 & opcode != 55 & opcode != 23 & opcode != 111 & opcode != 103)> <Delay = 0.71>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%agg_result_result_0 = phi i32 %newret, void %sw.default, i32 %add_ln33, void %sw.bb62, i32 %add_ln31, void %sw.bb55, i32 %shl_ln30, void %sw.bb45, i32 %shl_ln1, void %sw.bb41, i32 0, void %sw.bb, i32 0, void %sw.bb28.i, i32 0, void %sw.bb20.i, i32 0, void %sw.bb14.i, i32 0, void %sw.bb8.i, i32 0, void %sw.bb2.i, i32 0, void %sw.bb.i" [hart.cpp:38]   --->   Operation 69 'phi' 'agg_result_result_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%agg_result_next_pc_0 = phi i32 4, void %sw.default, i32 %tmp_7, void %sw.bb62, i32 %sext_ln27, void %sw.bb55, i32 4, void %sw.bb45, i32 4, void %sw.bb41, i32 0, void %sw.bb, i32 %sext_ln5_5, void %sw.bb28.i, i32 %sext_ln5_4, void %sw.bb20.i, i32 %sext_ln5_3, void %sw.bb14.i, i32 %sext_ln5_2, void %sw.bb8.i, i32 %sext_ln5_1, void %sw.bb2.i, i32 %sext_ln5, void %sw.bb.i" [hart.cpp:35]   --->   Operation 70 'phi' 'agg_result_next_pc_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%agg_result_valid_0 = phi i1 %newret1, void %sw.default, i1 %icmp_ln32, void %sw.bb62, i1 1, void %sw.bb55, i1 1, void %sw.bb45, i1 1, void %sw.bb41, i1 0, void %sw.bb, i1 1, void %sw.bb28.i, i1 1, void %sw.bb20.i, i1 1, void %sw.bb14.i, i1 1, void %sw.bb8.i, i1 1, void %sw.bb2.i, i1 1, void %sw.bb.i" [hart.cpp:38]   --->   Operation 71 'phi' 'agg_result_valid_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%mrv = insertvalue i65 <undef>, i32 %agg_result_result_0" [hart.cpp:42]   --->   Operation 72 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i65 %mrv, i32 %agg_result_next_pc_0" [hart.cpp:42]   --->   Operation 73 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i65 %mrv_1, i1 %agg_result_valid_0" [hart.cpp:42]   --->   Operation 74 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%ret_ln42 = ret i65 %mrv_2" [hart.cpp:42]   --->   Operation 75 'ret' 'ret_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.010ns
The critical path consists of the following:
	wire read operation ('inst_val_read', hart.cpp:17) on port 'inst_val' (hart.cpp:17) [8]  (0.000 ns)
	'call' operation 33 bit ('call_ret', hart.cpp:38) to 'OP_AL_32I' [80]  (3.591 ns)
	multiplexor before 'phi' operation 32 bit ('agg_result_result_0', hart.cpp:38) with incoming values : ('add_ln33', hart.cpp:33) ('add_ln31', hart.cpp:31) ('shl_ln30', hart.cpp:30) ('shl_ln1', hart.cpp:29) ('newret', hart.cpp:38) [85]  (0.715 ns)
	'phi' operation 32 bit ('agg_result_result_0', hart.cpp:38) with incoming values : ('add_ln33', hart.cpp:33) ('add_ln31', hart.cpp:31) ('shl_ln30', hart.cpp:30) ('shl_ln1', hart.cpp:29) ('newret', hart.cpp:38) [85]  (0.000 ns)
	blocking operation 0.703937 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
