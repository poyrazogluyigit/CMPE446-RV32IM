

================================================================
== Vitis HLS Report for 'OP_AL_32I'
================================================================
* Date:           Fri Apr 19 20:10:58 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        Project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.591 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.59>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%op2_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op2_val" [OP_AL_32I.cpp:10]   --->   Operation 2 'read' 'op2_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%op1_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op1_val" [OP_AL_32I.cpp:10]   --->   Operation 3 'read' 'op1_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%func3_val_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %func3_val" [OP_AL_32I.cpp:10]   --->   Operation 4 'read' 'func3_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%func7_val_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %func7_val" [OP_AL_32I.cpp:10]   --->   Operation 5 'read' 'func7_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%inst_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %inst_val" [OP_AL_32I.cpp:10]   --->   Operation 6 'read' 'inst_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%trunc_ln10 = trunc i32 %op1_val_read" [OP_AL_32I.cpp:10]   --->   Operation 7 'trunc' 'trunc_ln10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%opcode = trunc i32 %inst_val_read" [OP_AL_32I.cpp:10]   --->   Operation 8 'trunc' 'opcode' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%immediate = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %inst_val_read, i32 20, i32 31" [OP_AL_32I.cpp:13]   --->   Operation 9 'partselect' 'immediate' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i12 %immediate" [OP_AL_32I.cpp:13]   --->   Operation 10 'zext' 'zext_ln13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%shamt = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %inst_val_read, i32 20, i32 25" [OP_AL_32I.cpp:14]   --->   Operation 11 'partselect' 'shamt' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.73ns)   --->   "%switch_ln17 = switch i7 %opcode, void %sw.epilog137, i7 51, void %sw.bb, i7 19, void %sw.bb66" [OP_AL_32I.cpp:17]   --->   Operation 12 'switch' 'switch_ln17' <Predicate = true> <Delay = 0.73>
ST_1 : Operation 13 [1/1] (0.69ns)   --->   "%switch_ln51 = switch i3 %func3_val_read, void %sw.bb115, i3 0, void %sw.bb68, i3 2, void %sw.bb71, i3 3, void %sw.bb87, i3 4, void %sw.bb105, i3 6, void %sw.bb107, i3 7, void %sw.bb109, i3 1, void %sw.bb111" [OP_AL_32I.cpp:51]   --->   Operation 13 'switch' 'switch_ln51' <Predicate = (opcode == 19)> <Delay = 0.69>
ST_1 : Operation 14 [1/1] (0.70ns)   --->   "%icmp_ln59 = icmp_eq  i7 %func7_val_read, i7 0" [OP_AL_32I.cpp:59]   --->   Operation 14 'icmp' 'icmp_ln59' <Predicate = (opcode == 19 & func3_val_read == 1)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.73ns)   --->   "%br_ln59 = br i1 %icmp_ln59, void %sw.epilog137, void %if.then" [OP_AL_32I.cpp:59]   --->   Operation 15 'br' 'br_ln59' <Predicate = (opcode == 19 & func3_val_read == 1)> <Delay = 0.73>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i6 %shamt" [OP_AL_32I.cpp:59]   --->   Operation 16 'zext' 'zext_ln59' <Predicate = (opcode == 19 & func3_val_read == 1 & icmp_ln59)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.18ns)   --->   "%rd_val_14 = shl i32 %op1_val_read, i32 %zext_ln59" [OP_AL_32I.cpp:59]   --->   Operation 17 'shl' 'rd_val_14' <Predicate = (opcode == 19 & func3_val_read == 1 & icmp_ln59)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.73ns)   --->   "%br_ln59 = br void %sw.epilog137" [OP_AL_32I.cpp:59]   --->   Operation 18 'br' 'br_ln59' <Predicate = (opcode == 19 & func3_val_read == 1 & icmp_ln59)> <Delay = 0.73>
ST_1 : Operation 19 [1/1] (0.29ns)   --->   "%rd_val_5 = and i12 %immediate, i12 %trunc_ln10" [OP_AL_32I.cpp:57]   --->   Operation 19 'and' 'rd_val_5' <Predicate = (opcode == 19 & func3_val_read == 7)> <Delay = 0.29> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln7 = zext i12 %rd_val_5" [OP_AL_32I.cpp:7]   --->   Operation 20 'zext' 'zext_ln7' <Predicate = (opcode == 19 & func3_val_read == 7)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.73ns)   --->   "%br_ln57 = br void %sw.epilog137" [OP_AL_32I.cpp:57]   --->   Operation 21 'br' 'br_ln57' <Predicate = (opcode == 19 & func3_val_read == 7)> <Delay = 0.73>
ST_1 : Operation 22 [1/1] (0.29ns)   --->   "%or_ln56 = or i12 %trunc_ln10, i12 %immediate" [OP_AL_32I.cpp:56]   --->   Operation 22 'or' 'or_ln56' <Predicate = (opcode == 19 & func3_val_read == 6)> <Delay = 0.29> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %op1_val_read, i32 12, i32 31" [OP_AL_32I.cpp:56]   --->   Operation 23 'partselect' 'tmp_7' <Predicate = (opcode == 19 & func3_val_read == 6)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%rd_val_4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %tmp_7, i12 %or_ln56" [OP_AL_32I.cpp:56]   --->   Operation 24 'bitconcatenate' 'rd_val_4' <Predicate = (opcode == 19 & func3_val_read == 6)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.73ns)   --->   "%br_ln56 = br void %sw.epilog137" [OP_AL_32I.cpp:56]   --->   Operation 25 'br' 'br_ln56' <Predicate = (opcode == 19 & func3_val_read == 6)> <Delay = 0.73>
ST_1 : Operation 26 [1/1] (0.31ns)   --->   "%rd_val_3 = xor i32 %zext_ln13, i32 %op1_val_read" [OP_AL_32I.cpp:55]   --->   Operation 26 'xor' 'rd_val_3' <Predicate = (opcode == 19 & func3_val_read == 4)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.73ns)   --->   "%br_ln55 = br void %sw.epilog137" [OP_AL_32I.cpp:55]   --->   Operation 27 'br' 'br_ln55' <Predicate = (opcode == 19 & func3_val_read == 4)> <Delay = 0.73>
ST_1 : Operation 28 [1/1] (0.95ns)   --->   "%rd_val_2 = icmp_ugt  i32 %zext_ln13, i32 %op1_val_read" [OP_AL_32I.cpp:54]   --->   Operation 28 'icmp' 'rd_val_2' <Predicate = (opcode == 19 & func3_val_read == 3)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i1 %rd_val_2" [OP_AL_32I.cpp:54]   --->   Operation 29 'zext' 'zext_ln54' <Predicate = (opcode == 19 & func3_val_read == 3)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.73ns)   --->   "%br_ln54 = br void %sw.epilog137" [OP_AL_32I.cpp:54]   --->   Operation 30 'br' 'br_ln54' <Predicate = (opcode == 19 & func3_val_read == 3)> <Delay = 0.73>
ST_1 : Operation 31 [1/1] (0.95ns)   --->   "%rd_val_1 = icmp_sgt  i32 %zext_ln13, i32 %op1_val_read" [OP_AL_32I.cpp:53]   --->   Operation 31 'icmp' 'rd_val_1' <Predicate = (opcode == 19 & func3_val_read == 2)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i1 %rd_val_1" [OP_AL_32I.cpp:53]   --->   Operation 32 'zext' 'zext_ln53' <Predicate = (opcode == 19 & func3_val_read == 2)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.73ns)   --->   "%br_ln53 = br void %sw.epilog137" [OP_AL_32I.cpp:53]   --->   Operation 33 'br' 'br_ln53' <Predicate = (opcode == 19 & func3_val_read == 2)> <Delay = 0.73>
ST_1 : Operation 34 [1/1] (0.95ns)   --->   "%rd_val = add i32 %zext_ln13, i32 %op1_val_read" [OP_AL_32I.cpp:52]   --->   Operation 34 'add' 'rd_val' <Predicate = (opcode == 19 & func3_val_read == 0)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.73ns)   --->   "%br_ln52 = br void %sw.epilog137" [OP_AL_32I.cpp:52]   --->   Operation 35 'br' 'br_ln52' <Predicate = (opcode == 19 & func3_val_read == 0)> <Delay = 0.73>
ST_1 : Operation 36 [1/1] (0.73ns)   --->   "%switch_ln65 = switch i7 %func7_val_read, void %sw.epilog137, i7 0, void %sw.bb117, i7 32, void %sw.bb121" [OP_AL_32I.cpp:65]   --->   Operation 36 'switch' 'switch_ln65' <Predicate = (opcode == 19 & func3_val_read == 5)> <Delay = 0.73>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op1_val_read, i32 31" [OP_AL_32I.cpp:70]   --->   Operation 37 'bitselect' 'tmp_11' <Predicate = (opcode == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i6 %shamt" [OP_AL_32I.cpp:70]   --->   Operation 38 'zext' 'zext_ln70' <Predicate = (opcode == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln70 = br i1 %tmp_11, void %cond.false127, void %cond.true124" [OP_AL_32I.cpp:70]   --->   Operation 39 'br' 'br_ln70' <Predicate = (opcode == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.18ns)   --->   "%shr_i4 = lshr i32 %op1_val_read, i32 %zext_ln70" [OP_AL_32I.cpp:10]   --->   Operation 40 'lshr' 'shr_i4' <Predicate = (opcode == 19 & func3_val_read == 5 & func7_val_read == 32 & !tmp_11)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.73ns)   --->   "%br_ln70 = br void %sw.epilog137" [OP_AL_32I.cpp:70]   --->   Operation 41 'br' 'br_ln70' <Predicate = (opcode == 19 & func3_val_read == 5 & func7_val_read == 32 & !tmp_11)> <Delay = 0.73>
ST_1 : Operation 42 [1/1] (1.18ns)   --->   "%ashr_ln70 = ashr i32 %op1_val_read, i32 %zext_ln70" [OP_AL_32I.cpp:70]   --->   Operation 42 'ashr' 'ashr_ln70' <Predicate = (opcode == 19 & func3_val_read == 5 & func7_val_read == 32 & tmp_11)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.73ns)   --->   "%br_ln70 = br void %sw.epilog137" [OP_AL_32I.cpp:70]   --->   Operation 43 'br' 'br_ln70' <Predicate = (opcode == 19 & func3_val_read == 5 & func7_val_read == 32 & tmp_11)> <Delay = 0.73>
ST_1 : Operation 44 [1/1] (1.18ns)   --->   "%rd_val_13 = lshr i32 %op1_val_read, i32 %zext_ln13" [OP_AL_32I.cpp:67]   --->   Operation 44 'lshr' 'rd_val_13' <Predicate = (opcode == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.73ns)   --->   "%br_ln68 = br void %sw.epilog137" [OP_AL_32I.cpp:68]   --->   Operation 45 'br' 'br_ln68' <Predicate = (opcode == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.73>
ST_1 : Operation 46 [1/1] (0.73ns)   --->   "%switch_ln19 = switch i7 %func7_val_read, void %sw.epilog137, i7 0, void %sw.bb4, i7 32, void %sw.bb47" [OP_AL_32I.cpp:19]   --->   Operation 46 'switch' 'switch_ln19' <Predicate = (opcode == 51)> <Delay = 0.73>
ST_1 : Operation 47 [1/1] (0.73ns)   --->   "%switch_ln36 = switch i3 %func3_val_read, void %sw.epilog137, i3 0, void %sw.bb49, i3 5, void %sw.bb52" [OP_AL_32I.cpp:36]   --->   Operation 47 'switch' 'switch_ln36' <Predicate = (opcode == 51 & func7_val_read == 32)> <Delay = 0.73>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op1_val_read, i32 31" [OP_AL_32I.cpp:38]   --->   Operation 48 'bitselect' 'tmp_9' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op2_val_read, i32 31" [OP_AL_32I.cpp:38]   --->   Operation 49 'bitselect' 'tmp_10' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln38 = br i1 %tmp_9, void %cond.false58, void %cond.true55" [OP_AL_32I.cpp:38]   --->   Operation 50 'br' 'br_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln38 = br i1 %tmp_10, void %if.end.i191, void %if.then.i184" [OP_AL_32I.cpp:38]   --->   Operation 51 'br' 'br_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_9)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (1.18ns)   --->   "%shr_i_i1893 = lshr i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:10]   --->   Operation 52 'lshr' 'shr_i_i1893' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_9 & !tmp_10)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.73ns)   --->   "%br_ln38 = br void %sw.epilog137" [OP_AL_32I.cpp:38]   --->   Operation 53 'br' 'br_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_9 & !tmp_10)> <Delay = 0.73>
ST_1 : Operation 54 [1/1] (0.95ns)   --->   "%sub_ln38_1 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:38]   --->   Operation 54 'sub' 'sub_ln38_1' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_9 & tmp_10)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (1.18ns)   --->   "%shl_ln38_1 = shl i32 %op1_val_read, i32 %sub_ln38_1" [OP_AL_32I.cpp:38]   --->   Operation 55 'shl' 'shl_ln38_1' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_9 & tmp_10)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.73ns)   --->   "%br_ln38 = br void %sw.epilog137" [OP_AL_32I.cpp:38]   --->   Operation 56 'br' 'br_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_9 & tmp_10)> <Delay = 0.73>
ST_1 : Operation 57 [1/1] (0.31ns)   --->   "%xor_ln38 = xor i32 %op1_val_read, i32 4294967295" [OP_AL_32I.cpp:38]   --->   Operation 57 'xor' 'xor_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln38 = br i1 %tmp_10, void %if.end.i248, void %if.then.i241" [OP_AL_32I.cpp:38]   --->   Operation 58 'br' 'br_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (1.18ns)   --->   "%ashr_ln38 = ashr i32 %xor_ln38, i32 %op2_val_read" [OP_AL_32I.cpp:38]   --->   Operation 59 'ashr' 'ashr_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9 & !tmp_10)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.40ns)   --->   "%br_ln38 = br void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit249" [OP_AL_32I.cpp:38]   --->   Operation 60 'br' 'br_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9 & !tmp_10)> <Delay = 0.40>
ST_1 : Operation 61 [1/1] (0.95ns)   --->   "%sub_ln38 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:38]   --->   Operation 61 'sub' 'sub_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9 & tmp_10)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (1.18ns)   --->   "%shl_ln38 = shl i32 %xor_ln38, i32 %sub_ln38" [OP_AL_32I.cpp:38]   --->   Operation 62 'shl' 'shl_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9 & tmp_10)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.40ns)   --->   "%br_ln38 = br void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit249" [OP_AL_32I.cpp:38]   --->   Operation 63 'br' 'br_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9 & tmp_10)> <Delay = 0.40>
ST_1 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%tmp57_0 = phi i32 %shl_ln38, void %if.then.i241, i32 %ashr_ln38, void %if.end.i248" [OP_AL_32I.cpp:38]   --->   Operation 64 'phi' 'tmp57_0' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.31ns) (out node of the LUT)   --->   "%xor_ln38_1 = xor i32 %tmp57_0, i32 4294967295" [OP_AL_32I.cpp:38]   --->   Operation 65 'xor' 'xor_ln38_1' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.73ns)   --->   "%br_ln38 = br void %sw.epilog137" [OP_AL_32I.cpp:38]   --->   Operation 66 'br' 'br_ln38' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_9)> <Delay = 0.73>
ST_1 : Operation 67 [1/1] (0.95ns)   --->   "%rd_val_12 = sub i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:37]   --->   Operation 67 'sub' 'rd_val_12' <Predicate = (opcode == 51 & func3_val_read == 0 & func7_val_read == 32)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.73ns)   --->   "%br_ln37 = br void %sw.epilog137" [OP_AL_32I.cpp:37]   --->   Operation 68 'br' 'br_ln37' <Predicate = (opcode == 51 & func3_val_read == 0 & func7_val_read == 32)> <Delay = 0.73>
ST_1 : Operation 69 [1/1] (0.69ns)   --->   "%switch_ln21 = switch i3 %func3_val_read, void %sw.bb44, i3 0, void %sw.bb6, i3 1, void %sw.bb9, i3 2, void %sw.bb11, i3 3, void %sw.bb19, i3 4, void %sw.bb36, i3 5, void %sw.bb38, i3 6, void %sw.bb42" [OP_AL_32I.cpp:21]   --->   Operation 69 'switch' 'switch_ln21' <Predicate = (opcode == 51 & func7_val_read == 0)> <Delay = 0.69>
ST_1 : Operation 70 [1/1] (0.31ns)   --->   "%rd_val_11 = or i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:28]   --->   Operation 70 'or' 'rd_val_11' <Predicate = (opcode == 51 & func3_val_read == 6 & func7_val_read == 0)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.73ns)   --->   "%br_ln28 = br void %sw.epilog137" [OP_AL_32I.cpp:28]   --->   Operation 71 'br' 'br_ln28' <Predicate = (opcode == 51 & func3_val_read == 6 & func7_val_read == 0)> <Delay = 0.73>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op2_val_read, i32 31" [OP_AL_32I.cpp:27]   --->   Operation 72 'bitselect' 'tmp_8' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%br_ln27 = br i1 %tmp_8, void %if.end.i371, void %if.then.i364" [OP_AL_32I.cpp:27]   --->   Operation 73 'br' 'br_ln27' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (1.18ns)   --->   "%lshr_ln27 = lshr i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:27]   --->   Operation 74 'lshr' 'lshr_ln27' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 0 & !tmp_8)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (0.73ns)   --->   "%br_ln27 = br void %sw.epilog137" [OP_AL_32I.cpp:27]   --->   Operation 75 'br' 'br_ln27' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 0 & !tmp_8)> <Delay = 0.73>
ST_1 : Operation 76 [1/1] (0.95ns)   --->   "%sub_ln27 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:27]   --->   Operation 76 'sub' 'sub_ln27' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp_8)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (1.18ns)   --->   "%shl_ln27 = shl i32 %op1_val_read, i32 %sub_ln27" [OP_AL_32I.cpp:27]   --->   Operation 77 'shl' 'shl_ln27' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp_8)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.73ns)   --->   "%br_ln27 = br void %sw.epilog137" [OP_AL_32I.cpp:27]   --->   Operation 78 'br' 'br_ln27' <Predicate = (opcode == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp_8)> <Delay = 0.73>
ST_1 : Operation 79 [1/1] (0.31ns)   --->   "%rd_val_10 = xor i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:26]   --->   Operation 79 'xor' 'rd_val_10' <Predicate = (opcode == 51 & func3_val_read == 4 & func7_val_read == 0)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.73ns)   --->   "%br_ln26 = br void %sw.epilog137" [OP_AL_32I.cpp:26]   --->   Operation 80 'br' 'br_ln26' <Predicate = (opcode == 51 & func3_val_read == 4 & func7_val_read == 0)> <Delay = 0.73>
ST_1 : Operation 81 [1/1] (0.95ns)   --->   "%rd_val_9 = icmp_ult  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:25]   --->   Operation 81 'icmp' 'rd_val_9' <Predicate = (opcode == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i1 %rd_val_9" [OP_AL_32I.cpp:25]   --->   Operation 82 'zext' 'zext_ln25' <Predicate = (opcode == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.73ns)   --->   "%br_ln25 = br void %sw.epilog137" [OP_AL_32I.cpp:25]   --->   Operation 83 'br' 'br_ln25' <Predicate = (opcode == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.73>
ST_1 : Operation 84 [1/1] (0.95ns)   --->   "%rd_val_8 = icmp_slt  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:24]   --->   Operation 84 'icmp' 'rd_val_8' <Predicate = (opcode == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i1 %rd_val_8" [OP_AL_32I.cpp:24]   --->   Operation 85 'zext' 'zext_ln24' <Predicate = (opcode == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.73ns)   --->   "%br_ln24 = br void %sw.epilog137" [OP_AL_32I.cpp:24]   --->   Operation 86 'br' 'br_ln24' <Predicate = (opcode == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.73>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op2_val_read, i32 31" [OP_AL_32I.cpp:23]   --->   Operation 87 'bitselect' 'tmp' <Predicate = (opcode == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln23 = br i1 %tmp, void %if.else.i, void %if.then.i454" [OP_AL_32I.cpp:23]   --->   Operation 88 'br' 'br_ln23' <Predicate = (opcode == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (1.18ns)   --->   "%shl_ln23 = shl i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:23]   --->   Operation 89 'shl' 'shl_ln23' <Predicate = (opcode == 51 & func3_val_read == 1 & func7_val_read == 0 & !tmp)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.73ns)   --->   "%br_ln23 = br void %sw.epilog137" [OP_AL_32I.cpp:23]   --->   Operation 90 'br' 'br_ln23' <Predicate = (opcode == 51 & func3_val_read == 1 & func7_val_read == 0 & !tmp)> <Delay = 0.73>
ST_1 : Operation 91 [1/1] (0.95ns)   --->   "%sub_ln23 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:23]   --->   Operation 91 'sub' 'sub_ln23' <Predicate = (opcode == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (1.18ns)   --->   "%ashr_ln23 = ashr i32 %op1_val_read, i32 %sub_ln23" [OP_AL_32I.cpp:23]   --->   Operation 92 'ashr' 'ashr_ln23' <Predicate = (opcode == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.73ns)   --->   "%br_ln23 = br void %sw.epilog137" [OP_AL_32I.cpp:23]   --->   Operation 93 'br' 'br_ln23' <Predicate = (opcode == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 0.73>
ST_1 : Operation 94 [1/1] (0.95ns)   --->   "%rd_val_7 = add i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:22]   --->   Operation 94 'add' 'rd_val_7' <Predicate = (opcode == 51 & func3_val_read == 0 & func7_val_read == 0)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.73ns)   --->   "%br_ln22 = br void %sw.epilog137" [OP_AL_32I.cpp:22]   --->   Operation 95 'br' 'br_ln22' <Predicate = (opcode == 51 & func3_val_read == 0 & func7_val_read == 0)> <Delay = 0.73>
ST_1 : Operation 96 [1/1] (0.31ns)   --->   "%rd_val_6 = and i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:29]   --->   Operation 96 'and' 'rd_val_6' <Predicate = (opcode == 51 & func3_val_read == 7 & func7_val_read == 0)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.73ns)   --->   "%br_ln29 = br void %sw.epilog137" [OP_AL_32I.cpp:29]   --->   Operation 97 'br' 'br_ln29' <Predicate = (opcode == 51 & func3_val_read == 7 & func7_val_read == 0)> <Delay = 0.73>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%rd_val_15 = phi i32 %zext_ln7, void %sw.bb109, i32 %rd_val_4, void %sw.bb107, i32 %rd_val_3, void %sw.bb105, i32 %zext_ln54, void %sw.bb87, i32 %zext_ln53, void %sw.bb71, i32 %rd_val, void %sw.bb68, i32 %rd_val_13, void %sw.bb117, i32 %ashr_ln70, void %cond.true124, i32 %shr_i4, void %cond.false127, i32 %rd_val_14, void %if.then, i32 %rd_val_12, void %sw.bb49, i32 %xor_ln38_1, void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit249, i32 %shl_ln38_1, void %if.then.i184, i32 %shr_i_i1893, void %if.end.i191, i32 %rd_val_6, void %sw.bb44, i32 %rd_val_11, void %sw.bb42, i32 %rd_val_10, void %sw.bb36, i32 %zext_ln25, void %sw.bb19, i32 %zext_ln24, void %sw.bb11, i32 %rd_val_7, void %sw.bb6, i32 %shl_ln27, void %if.then.i364, i32 %lshr_ln27, void %if.end.i371, i32 %ashr_ln23, void %if.then.i454, i32 %shl_ln23, void %if.else.i, i32 0, void %entry, i32 0, void %sw.bb, i32 0, void %sw.bb47, i32 0, void %sw.bb111, i32 0, void %sw.bb115"   --->   Operation 98 'phi' 'rd_val_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%valid = phi i1 1, void %sw.bb109, i1 1, void %sw.bb107, i1 1, void %sw.bb105, i1 1, void %sw.bb87, i1 1, void %sw.bb71, i1 1, void %sw.bb68, i1 1, void %sw.bb117, i1 1, void %cond.true124, i1 1, void %cond.false127, i1 1, void %if.then, i1 1, void %sw.bb49, i1 1, void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit249, i1 1, void %if.then.i184, i1 1, void %if.end.i191, i1 1, void %sw.bb44, i1 1, void %sw.bb42, i1 1, void %sw.bb36, i1 1, void %sw.bb19, i1 1, void %sw.bb11, i1 1, void %sw.bb6, i1 1, void %if.then.i364, i1 1, void %if.end.i371, i1 1, void %if.then.i454, i1 1, void %if.else.i, i1 0, void %entry, i1 0, void %sw.bb, i1 0, void %sw.bb47, i1 0, void %sw.bb111, i1 0, void %sw.bb115"   --->   Operation 99 'phi' 'valid' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%newret = insertvalue i33 <undef>, i32 %rd_val_15" [OP_AL_32I.cpp:7]   --->   Operation 100 'insertvalue' 'newret' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%newret2 = insertvalue i33 %newret, i1 %valid" [OP_AL_32I.cpp:7]   --->   Operation 101 'insertvalue' 'newret2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%ret_ln7 = ret i33 %newret2" [OP_AL_32I.cpp:7]   --->   Operation 102 'ret' 'ret_ln7' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.591ns
The critical path consists of the following:
	wire read operation ('op2_val_read', OP_AL_32I.cpp:10) on port 'op2_val' (OP_AL_32I.cpp:10) [6]  (0.000 ns)
	'sub' operation 32 bit ('sub_ln38', OP_AL_32I.cpp:38) [88]  (0.953 ns)
	'shl' operation 32 bit ('shl_ln38', OP_AL_32I.cpp:38) [89]  (1.181 ns)
	multiplexor before 'phi' operation 32 bit ('tmp57_0', OP_AL_32I.cpp:38) with incoming values : ('ashr_ln38', OP_AL_32I.cpp:38) ('shl_ln38', OP_AL_32I.cpp:38) [92]  (0.402 ns)
	'phi' operation 32 bit ('tmp57_0', OP_AL_32I.cpp:38) with incoming values : ('ashr_ln38', OP_AL_32I.cpp:38) ('shl_ln38', OP_AL_32I.cpp:38) [92]  (0.000 ns)
	'xor' operation 32 bit ('xor_ln38_1', OP_AL_32I.cpp:38) [93]  (0.319 ns)
	multiplexor before 'phi' operation 32 bit ('rd_val') with incoming values : ('rd_val', OP_AL_32I.cpp:59) ('zext_ln7', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:56) ('rd_val', OP_AL_32I.cpp:55) ('zext_ln54', OP_AL_32I.cpp:54) ('zext_ln53', OP_AL_32I.cpp:53) ('rd_val', OP_AL_32I.cpp:52) ('shr_i4', OP_AL_32I.cpp:10) ('ashr_ln70', OP_AL_32I.cpp:70) ('rd_val', OP_AL_32I.cpp:67) ('shr_i_i1893', OP_AL_32I.cpp:10) ('shl_ln38_1', OP_AL_32I.cpp:38) ('xor_ln38_1', OP_AL_32I.cpp:38) ('rd_val', OP_AL_32I.cpp:37) ('rd_val', OP_AL_32I.cpp:28) ('lshr_ln27', OP_AL_32I.cpp:27) ('shl_ln27', OP_AL_32I.cpp:27) ('rd_val', OP_AL_32I.cpp:26) ('zext_ln25', OP_AL_32I.cpp:25) ('zext_ln24', OP_AL_32I.cpp:24) ('shl_ln23', OP_AL_32I.cpp:23) ('ashr_ln23', OP_AL_32I.cpp:23) ('rd_val', OP_AL_32I.cpp:22) ('rd_val', OP_AL_32I.cpp:29) [141]  (0.736 ns)
	'phi' operation 32 bit ('rd_val') with incoming values : ('rd_val', OP_AL_32I.cpp:59) ('zext_ln7', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:56) ('rd_val', OP_AL_32I.cpp:55) ('zext_ln54', OP_AL_32I.cpp:54) ('zext_ln53', OP_AL_32I.cpp:53) ('rd_val', OP_AL_32I.cpp:52) ('shr_i4', OP_AL_32I.cpp:10) ('ashr_ln70', OP_AL_32I.cpp:70) ('rd_val', OP_AL_32I.cpp:67) ('shr_i_i1893', OP_AL_32I.cpp:10) ('shl_ln38_1', OP_AL_32I.cpp:38) ('xor_ln38_1', OP_AL_32I.cpp:38) ('rd_val', OP_AL_32I.cpp:37) ('rd_val', OP_AL_32I.cpp:28) ('lshr_ln27', OP_AL_32I.cpp:27) ('shl_ln27', OP_AL_32I.cpp:27) ('rd_val', OP_AL_32I.cpp:26) ('zext_ln25', OP_AL_32I.cpp:25) ('zext_ln24', OP_AL_32I.cpp:24) ('shl_ln23', OP_AL_32I.cpp:23) ('ashr_ln23', OP_AL_32I.cpp:23) ('rd_val', OP_AL_32I.cpp:22) ('rd_val', OP_AL_32I.cpp:29) [141]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
