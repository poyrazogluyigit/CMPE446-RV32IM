

================================================================
== Vitis HLS Report for 'OP_AL_32I'
================================================================
* Date:           Sun Apr 14 20:14:15 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        assignment
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7vx550t-ffg1927-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.908 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    1|    1|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.90>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%op2_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op2_val" [OP_AL_32I.cpp:13]   --->   Operation 3 'read' 'op2_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%op1_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op1_val" [OP_AL_32I.cpp:13]   --->   Operation 4 'read' 'op1_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%func3_val_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %func3_val" [OP_AL_32I.cpp:13]   --->   Operation 5 'read' 'func3_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%func7_val_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %func7_val" [OP_AL_32I.cpp:13]   --->   Operation 6 'read' 'func7_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%opcode_val_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %opcode_val" [OP_AL_32I.cpp:13]   --->   Operation 7 'read' 'opcode_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%shamt = trunc i32 %op2_val_read" [OP_AL_32I.cpp:13]   --->   Operation 8 'trunc' 'shamt' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op2_val_read, i32 31" [OP_AL_32I.cpp:22]   --->   Operation 9 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.91ns)   --->   "%switch_ln16 = switch i7 %opcode_val_read, void %sw.epilog139, i7 51, void %sw.bb, i7 19, void %sw.bb65" [OP_AL_32I.cpp:16]   --->   Operation 10 'switch' 'switch_ln16' <Predicate = true> <Delay = 1.91>
ST_1 : Operation 11 [1/1] (1.56ns)   --->   "%switch_ln50 = switch i3 %func3_val_read, void %sw.bb114, i3 0, void %sw.bb67, i3 2, void %sw.bb70, i3 3, void %sw.bb86, i3 4, void %sw.bb104, i3 6, void %sw.bb106, i3 7, void %sw.bb108, i3 1, void %sw.bb110" [OP_AL_32I.cpp:50]   --->   Operation 11 'switch' 'switch_ln50' <Predicate = (opcode_val_read == 19)> <Delay = 1.56>
ST_1 : Operation 12 [1/1] (1.38ns)   --->   "%icmp_ln58 = icmp_eq  i7 %func7_val_read, i7 0" [OP_AL_32I.cpp:58]   --->   Operation 12 'icmp' 'icmp_ln58' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 1.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (1.91ns)   --->   "%br_ln58 = br i1 %icmp_ln58, void %sw.epilog139, void %if.then" [OP_AL_32I.cpp:58]   --->   Operation 13 'br' 'br_ln58' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 1.91>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i6 %shamt" [OP_AL_32I.cpp:58]   --->   Operation 14 'zext' 'zext_ln58' <Predicate = (opcode_val_read == 19 & func3_val_read == 1 & icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (2.36ns)   --->   "%rd_val_13 = shl i32 %op1_val_read, i32 %zext_ln58" [OP_AL_32I.cpp:58]   --->   Operation 15 'shl' 'rd_val_13' <Predicate = (opcode_val_read == 19 & func3_val_read == 1 & icmp_ln58)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (1.91ns)   --->   "%br_ln58 = br void %sw.epilog139" [OP_AL_32I.cpp:58]   --->   Operation 16 'br' 'br_ln58' <Predicate = (opcode_val_read == 19 & func3_val_read == 1 & icmp_ln58)> <Delay = 1.91>
ST_1 : Operation 17 [1/1] (0.65ns)   --->   "%rd_val_5 = and i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:56]   --->   Operation 17 'and' 'rd_val_5' <Predicate = (opcode_val_read == 19 & func3_val_read == 7)> <Delay = 0.65> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.91ns)   --->   "%br_ln56 = br void %sw.epilog139" [OP_AL_32I.cpp:56]   --->   Operation 18 'br' 'br_ln56' <Predicate = (opcode_val_read == 19 & func3_val_read == 7)> <Delay = 1.91>
ST_1 : Operation 19 [1/1] (0.65ns)   --->   "%rd_val_4 = or i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:55]   --->   Operation 19 'or' 'rd_val_4' <Predicate = (opcode_val_read == 19 & func3_val_read == 6)> <Delay = 0.65> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (1.91ns)   --->   "%br_ln55 = br void %sw.epilog139" [OP_AL_32I.cpp:55]   --->   Operation 20 'br' 'br_ln55' <Predicate = (opcode_val_read == 19 & func3_val_read == 6)> <Delay = 1.91>
ST_1 : Operation 21 [1/1] (0.65ns)   --->   "%rd_val_3 = xor i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:54]   --->   Operation 21 'xor' 'rd_val_3' <Predicate = (opcode_val_read == 19 & func3_val_read == 4)> <Delay = 0.65> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (1.91ns)   --->   "%br_ln54 = br void %sw.epilog139" [OP_AL_32I.cpp:54]   --->   Operation 22 'br' 'br_ln54' <Predicate = (opcode_val_read == 19 & func3_val_read == 4)> <Delay = 1.91>
ST_1 : Operation 23 [1/1] (1.63ns)   --->   "%rd_val_2 = icmp_ugt  i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:53]   --->   Operation 23 'icmp' 'rd_val_2' <Predicate = (opcode_val_read == 19 & func3_val_read == 3)> <Delay = 1.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i1 %rd_val_2" [OP_AL_32I.cpp:53]   --->   Operation 24 'zext' 'zext_ln53' <Predicate = (opcode_val_read == 19 & func3_val_read == 3)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.91ns)   --->   "%br_ln53 = br void %sw.epilog139" [OP_AL_32I.cpp:53]   --->   Operation 25 'br' 'br_ln53' <Predicate = (opcode_val_read == 19 & func3_val_read == 3)> <Delay = 1.91>
ST_1 : Operation 26 [1/1] (1.63ns)   --->   "%rd_val_1 = icmp_sgt  i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:52]   --->   Operation 26 'icmp' 'rd_val_1' <Predicate = (opcode_val_read == 19 & func3_val_read == 2)> <Delay = 1.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i1 %rd_val_1" [OP_AL_32I.cpp:52]   --->   Operation 27 'zext' 'zext_ln52' <Predicate = (opcode_val_read == 19 & func3_val_read == 2)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.91ns)   --->   "%br_ln52 = br void %sw.epilog139" [OP_AL_32I.cpp:52]   --->   Operation 28 'br' 'br_ln52' <Predicate = (opcode_val_read == 19 & func3_val_read == 2)> <Delay = 1.91>
ST_1 : Operation 29 [1/1] (1.63ns)   --->   "%rd_val = add i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:51]   --->   Operation 29 'add' 'rd_val' <Predicate = (opcode_val_read == 19 & func3_val_read == 0)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (1.91ns)   --->   "%br_ln51 = br void %sw.epilog139" [OP_AL_32I.cpp:51]   --->   Operation 30 'br' 'br_ln51' <Predicate = (opcode_val_read == 19 & func3_val_read == 0)> <Delay = 1.91>
ST_1 : Operation 31 [1/1] (1.91ns)   --->   "%switch_ln64 = switch i7 %func7_val_read, void %sw.epilog139, i7 0, void %if.then116, i7 32, void %if.then122" [OP_AL_32I.cpp:64]   --->   Operation 31 'switch' 'switch_ln64' <Predicate = (opcode_val_read == 19 & func3_val_read == 5)> <Delay = 1.91>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op1_val_read, i32 31" [OP_AL_32I.cpp:65]   --->   Operation 32 'bitselect' 'tmp_2' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i6 %shamt" [OP_AL_32I.cpp:65]   --->   Operation 33 'zext' 'zext_ln65' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln65 = br i1 %tmp_2, void %cond.false128, void %cond.true125" [OP_AL_32I.cpp:65]   --->   Operation 34 'br' 'br_ln65' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (2.36ns)   --->   "%shr_i4 = lshr i32 %op1_val_read, i32 %zext_ln65" [OP_AL_32I.cpp:13]   --->   Operation 35 'lshr' 'shr_i4' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32 & !tmp_2)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (1.91ns)   --->   "%br_ln65 = br void %sw.epilog139" [OP_AL_32I.cpp:65]   --->   Operation 36 'br' 'br_ln65' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32 & !tmp_2)> <Delay = 1.91>
ST_1 : Operation 37 [1/1] (2.36ns)   --->   "%ashr_ln65 = ashr i32 %op1_val_read, i32 %zext_ln65" [OP_AL_32I.cpp:65]   --->   Operation 37 'ashr' 'ashr_ln65' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32 & tmp_2)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (1.91ns)   --->   "%br_ln65 = br void %sw.epilog139" [OP_AL_32I.cpp:65]   --->   Operation 38 'br' 'br_ln65' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32 & tmp_2)> <Delay = 1.91>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln64 = br i1 %tmp, void %if.end.i, void %if.then.i" [OP_AL_32I.cpp:64]   --->   Operation 39 'br' 'br_ln64' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (2.36ns)   --->   "%lshr_ln64 = lshr i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:64]   --->   Operation 40 'lshr' 'lshr_ln64' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0 & !tmp)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.91ns)   --->   "%br_ln64 = br void %sw.epilog139" [OP_AL_32I.cpp:64]   --->   Operation 41 'br' 'br_ln64' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0 & !tmp)> <Delay = 1.91>
ST_1 : Operation 42 [1/1] (1.63ns)   --->   "%sub_ln64 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:64]   --->   Operation 42 'sub' 'sub_ln64' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0 & tmp)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (2.36ns)   --->   "%shl_ln64 = shl i32 %op1_val_read, i32 %sub_ln64" [OP_AL_32I.cpp:64]   --->   Operation 43 'shl' 'shl_ln64' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0 & tmp)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (1.91ns)   --->   "%br_ln64 = br void %sw.epilog139" [OP_AL_32I.cpp:64]   --->   Operation 44 'br' 'br_ln64' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0 & tmp)> <Delay = 1.91>
ST_1 : Operation 45 [1/1] (1.91ns)   --->   "%switch_ln18 = switch i7 %func7_val_read, void %sw.epilog139, i7 0, void %sw.bb3, i7 32, void %sw.bb46" [OP_AL_32I.cpp:18]   --->   Operation 45 'switch' 'switch_ln18' <Predicate = (opcode_val_read == 51)> <Delay = 1.91>
ST_1 : Operation 46 [1/1] (1.91ns)   --->   "%switch_ln35 = switch i3 %func3_val_read, void %sw.epilog139, i3 0, void %sw.bb48, i3 5, void %sw.bb51" [OP_AL_32I.cpp:35]   --->   Operation 46 'switch' 'switch_ln35' <Predicate = (opcode_val_read == 51 & func7_val_read == 32)> <Delay = 1.91>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op1_val_read, i32 31" [OP_AL_32I.cpp:37]   --->   Operation 47 'bitselect' 'tmp_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %tmp_1, void %cond.false57, void %cond.true54" [OP_AL_32I.cpp:37]   --->   Operation 48 'br' 'br_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %tmp, void %if.end.i196, void %if.then.i189" [OP_AL_32I.cpp:37]   --->   Operation 49 'br' 'br_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_1)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (2.36ns)   --->   "%shr_i_i1943 = lshr i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:13]   --->   Operation 50 'lshr' 'shr_i_i1943' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp & !tmp_1)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (1.91ns)   --->   "%br_ln37 = br void %sw.epilog139" [OP_AL_32I.cpp:37]   --->   Operation 51 'br' 'br_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp & !tmp_1)> <Delay = 1.91>
ST_1 : Operation 52 [1/1] (1.63ns)   --->   "%sub_ln37_1 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:37]   --->   Operation 52 'sub' 'sub_ln37_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp & !tmp_1)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (2.36ns)   --->   "%shl_ln37_1 = shl i32 %op1_val_read, i32 %sub_ln37_1" [OP_AL_32I.cpp:37]   --->   Operation 53 'shl' 'shl_ln37_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp & !tmp_1)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (1.91ns)   --->   "%br_ln37 = br void %sw.epilog139" [OP_AL_32I.cpp:37]   --->   Operation 54 'br' 'br_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp & !tmp_1)> <Delay = 1.91>
ST_1 : Operation 55 [1/1] (0.65ns)   --->   "%xor_ln37 = xor i32 %op1_val_read, i32 4294967295" [OP_AL_32I.cpp:37]   --->   Operation 55 'xor' 'xor_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_1)> <Delay = 0.65> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %tmp, void %if.end.i253, void %if.then.i246" [OP_AL_32I.cpp:37]   --->   Operation 56 'br' 'br_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_1)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (2.36ns)   --->   "%ashr_ln37 = ashr i32 %xor_ln37, i32 %op2_val_read" [OP_AL_32I.cpp:37]   --->   Operation 57 'ashr' 'ashr_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp & tmp_1)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (1.03ns)   --->   "%br_ln37 = br void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit254" [OP_AL_32I.cpp:37]   --->   Operation 58 'br' 'br_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp & tmp_1)> <Delay = 1.03>
ST_1 : Operation 59 [1/1] (1.63ns)   --->   "%sub_ln37 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:37]   --->   Operation 59 'sub' 'sub_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp & tmp_1)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (2.36ns)   --->   "%shl_ln37 = shl i32 %xor_ln37, i32 %sub_ln37" [OP_AL_32I.cpp:37]   --->   Operation 60 'shl' 'shl_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp & tmp_1)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (1.03ns)   --->   "%br_ln37 = br void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit254" [OP_AL_32I.cpp:37]   --->   Operation 61 'br' 'br_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp & tmp_1)> <Delay = 1.03>
ST_1 : Operation 62 [1/1] (1.63ns)   --->   "%rd_val_12 = sub i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:36]   --->   Operation 62 'sub' 'rd_val_12' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 32)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (1.91ns)   --->   "%br_ln36 = br void %sw.epilog139" [OP_AL_32I.cpp:36]   --->   Operation 63 'br' 'br_ln36' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 32)> <Delay = 1.91>
ST_1 : Operation 64 [1/1] (1.56ns)   --->   "%switch_ln20 = switch i3 %func3_val_read, void %sw.bb43, i3 0, void %sw.bb5, i3 1, void %sw.bb8, i3 2, void %sw.bb10, i3 3, void %sw.bb18, i3 4, void %sw.bb35, i3 5, void %sw.bb37, i3 6, void %sw.bb41" [OP_AL_32I.cpp:20]   --->   Operation 64 'switch' 'switch_ln20' <Predicate = (opcode_val_read == 51 & func7_val_read == 0)> <Delay = 1.56>
ST_1 : Operation 65 [1/1] (0.65ns)   --->   "%rd_val_11 = or i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:27]   --->   Operation 65 'or' 'rd_val_11' <Predicate = (opcode_val_read == 51 & func3_val_read == 6 & func7_val_read == 0)> <Delay = 0.65> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (1.91ns)   --->   "%br_ln27 = br void %sw.epilog139" [OP_AL_32I.cpp:27]   --->   Operation 66 'br' 'br_ln27' <Predicate = (opcode_val_read == 51 & func3_val_read == 6 & func7_val_read == 0)> <Delay = 1.91>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln26 = br i1 %tmp, void %if.end.i376, void %if.then.i369" [OP_AL_32I.cpp:26]   --->   Operation 67 'br' 'br_ln26' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (2.36ns)   --->   "%lshr_ln26 = lshr i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:26]   --->   Operation 68 'lshr' 'lshr_ln26' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & !tmp)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (1.91ns)   --->   "%br_ln26 = br void %sw.epilog139" [OP_AL_32I.cpp:26]   --->   Operation 69 'br' 'br_ln26' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & !tmp)> <Delay = 1.91>
ST_1 : Operation 70 [1/1] (1.63ns)   --->   "%sub_ln26 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:26]   --->   Operation 70 'sub' 'sub_ln26' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (2.36ns)   --->   "%shl_ln26 = shl i32 %op1_val_read, i32 %sub_ln26" [OP_AL_32I.cpp:26]   --->   Operation 71 'shl' 'shl_ln26' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (1.91ns)   --->   "%br_ln26 = br void %sw.epilog139" [OP_AL_32I.cpp:26]   --->   Operation 72 'br' 'br_ln26' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp)> <Delay = 1.91>
ST_1 : Operation 73 [1/1] (0.65ns)   --->   "%rd_val_10 = xor i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:25]   --->   Operation 73 'xor' 'rd_val_10' <Predicate = (opcode_val_read == 51 & func3_val_read == 4 & func7_val_read == 0)> <Delay = 0.65> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (1.91ns)   --->   "%br_ln25 = br void %sw.epilog139" [OP_AL_32I.cpp:25]   --->   Operation 74 'br' 'br_ln25' <Predicate = (opcode_val_read == 51 & func3_val_read == 4 & func7_val_read == 0)> <Delay = 1.91>
ST_1 : Operation 75 [1/1] (1.63ns)   --->   "%rd_val_9 = icmp_ult  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:24]   --->   Operation 75 'icmp' 'rd_val_9' <Predicate = (opcode_val_read == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 1.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i1 %rd_val_9" [OP_AL_32I.cpp:24]   --->   Operation 76 'zext' 'zext_ln24' <Predicate = (opcode_val_read == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (1.91ns)   --->   "%br_ln24 = br void %sw.epilog139" [OP_AL_32I.cpp:24]   --->   Operation 77 'br' 'br_ln24' <Predicate = (opcode_val_read == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 1.91>
ST_1 : Operation 78 [1/1] (1.63ns)   --->   "%rd_val_8 = icmp_slt  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:23]   --->   Operation 78 'icmp' 'rd_val_8' <Predicate = (opcode_val_read == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 1.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i1 %rd_val_8" [OP_AL_32I.cpp:23]   --->   Operation 79 'zext' 'zext_ln23' <Predicate = (opcode_val_read == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (1.91ns)   --->   "%br_ln23 = br void %sw.epilog139" [OP_AL_32I.cpp:23]   --->   Operation 80 'br' 'br_ln23' <Predicate = (opcode_val_read == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 1.91>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln22 = br i1 %tmp, void %if.else.i, void %if.then.i459" [OP_AL_32I.cpp:22]   --->   Operation 81 'br' 'br_ln22' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (2.36ns)   --->   "%shl_ln22 = shl i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:22]   --->   Operation 82 'shl' 'shl_ln22' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & !tmp)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (1.91ns)   --->   "%br_ln22 = br void %sw.epilog139" [OP_AL_32I.cpp:22]   --->   Operation 83 'br' 'br_ln22' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & !tmp)> <Delay = 1.91>
ST_1 : Operation 84 [1/1] (1.63ns)   --->   "%sub_ln22 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:22]   --->   Operation 84 'sub' 'sub_ln22' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (2.36ns)   --->   "%ashr_ln22 = ashr i32 %op1_val_read, i32 %sub_ln22" [OP_AL_32I.cpp:22]   --->   Operation 85 'ashr' 'ashr_ln22' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (1.91ns)   --->   "%br_ln22 = br void %sw.epilog139" [OP_AL_32I.cpp:22]   --->   Operation 86 'br' 'br_ln22' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 1.91>
ST_1 : Operation 87 [1/1] (1.63ns)   --->   "%rd_val_7 = add i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:21]   --->   Operation 87 'add' 'rd_val_7' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 0)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (1.91ns)   --->   "%br_ln21 = br void %sw.epilog139" [OP_AL_32I.cpp:21]   --->   Operation 88 'br' 'br_ln21' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 0)> <Delay = 1.91>
ST_1 : Operation 89 [1/1] (0.65ns)   --->   "%rd_val_6 = and i32 %op2_val_read, i32 %op1_val_read" [OP_AL_32I.cpp:28]   --->   Operation 89 'and' 'rd_val_6' <Predicate = (opcode_val_read == 51 & func3_val_read == 7 & func7_val_read == 0)> <Delay = 0.65> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (1.91ns)   --->   "%br_ln28 = br void %sw.epilog139" [OP_AL_32I.cpp:28]   --->   Operation 90 'br' 'br_ln28' <Predicate = (opcode_val_read == 51 & func3_val_read == 7 & func7_val_read == 0)> <Delay = 1.91>

State 2 <SV = 1> <Delay = 2.56>
ST_2 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node xor_ln37_1)   --->   "%tmp56_0 = phi i32 %shl_ln37, void %if.then.i246, i32 %ashr_ln37, void %if.end.i253" [OP_AL_32I.cpp:37]   --->   Operation 91 'phi' 'tmp56_0' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_1)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.65ns) (out node of the LUT)   --->   "%xor_ln37_1 = xor i32 %tmp56_0, i32 4294967295" [OP_AL_32I.cpp:37]   --->   Operation 92 'xor' 'xor_ln37_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_1)> <Delay = 0.65> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (1.91ns)   --->   "%br_ln37 = br void %sw.epilog139" [OP_AL_32I.cpp:37]   --->   Operation 93 'br' 'br_ln37' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_1)> <Delay = 1.91>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%rd_val_14 = phi i32 %rd_val_5, void %sw.bb108, i32 %rd_val_4, void %sw.bb106, i32 %rd_val_3, void %sw.bb104, i32 %zext_ln53, void %sw.bb86, i32 %zext_ln52, void %sw.bb70, i32 %rd_val, void %sw.bb67, i32 %ashr_ln65, void %cond.true125, i32 %shr_i4, void %cond.false128, i32 %shl_ln64, void %if.then.i, i32 %lshr_ln64, void %if.end.i, i32 %rd_val_13, void %if.then, i32 %rd_val_12, void %sw.bb48, i32 %xor_ln37_1, void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit254, i32 %shl_ln37_1, void %if.then.i189, i32 %shr_i_i1943, void %if.end.i196, i32 %rd_val_6, void %sw.bb43, i32 %rd_val_11, void %sw.bb41, i32 %rd_val_10, void %sw.bb35, i32 %zext_ln24, void %sw.bb18, i32 %zext_ln23, void %sw.bb10, i32 %rd_val_7, void %sw.bb5, i32 %shl_ln26, void %if.then.i369, i32 %lshr_ln26, void %if.end.i376, i32 %ashr_ln22, void %if.then.i459, i32 %shl_ln22, void %if.else.i, i32 0, void %entry, i32 0, void %sw.bb, i32 0, void %sw.bb46, i32 0, void %sw.bb110, i32 0, void %sw.bb114"   --->   Operation 94 'phi' 'rd_val_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%status = phi i1 0, void %sw.bb108, i1 0, void %sw.bb106, i1 0, void %sw.bb104, i1 0, void %sw.bb86, i1 0, void %sw.bb70, i1 0, void %sw.bb67, i1 0, void %cond.true125, i1 0, void %cond.false128, i1 0, void %if.then.i, i1 0, void %if.end.i, i1 0, void %if.then, i1 0, void %sw.bb48, i1 0, void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit254, i1 0, void %if.then.i189, i1 0, void %if.end.i196, i1 0, void %sw.bb43, i1 0, void %sw.bb41, i1 0, void %sw.bb35, i1 0, void %sw.bb18, i1 0, void %sw.bb10, i1 0, void %sw.bb5, i1 0, void %if.then.i369, i1 0, void %if.end.i376, i1 0, void %if.then.i459, i1 0, void %if.else.i, i1 1, void %entry, i1 1, void %sw.bb, i1 1, void %sw.bb46, i1 1, void %sw.bb110, i1 1, void %sw.bb114"   --->   Operation 95 'phi' 'status' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%mrv = insertvalue i33 <undef>, i32 %rd_val_14" [OP_AL_32I.cpp:80]   --->   Operation 96 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i33 %mrv, i1 %status" [OP_AL_32I.cpp:80]   --->   Operation 97 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%ret_ln80 = ret i33 %mrv_1" [OP_AL_32I.cpp:80]   --->   Operation 98 'ret' 'ret_ln80' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.908ns
The critical path consists of the following:
	wire read operation ('op2_val_read', OP_AL_32I.cpp:13) on port 'op2_val' (OP_AL_32I.cpp:13) [6]  (0.000 ns)
	'sub' operation 32 bit ('sub_ln22', OP_AL_32I.cpp:22) [128]  (1.631 ns)
	'ashr' operation 32 bit ('ashr_ln22', OP_AL_32I.cpp:22) [129]  (2.364 ns)
	blocking operation 1.913 ns on control path)

 <State 2>: 2.569ns
The critical path consists of the following:
	'phi' operation 32 bit ('tmp56_0', OP_AL_32I.cpp:37) with incoming values : ('ashr_ln37', OP_AL_32I.cpp:37) ('shl_ln37', OP_AL_32I.cpp:37) [91]  (0.000 ns)
	'xor' operation 32 bit ('xor_ln37_1', OP_AL_32I.cpp:37) [92]  (0.656 ns)
	multiplexor before 'phi' operation 32 bit ('rd_val') with incoming values : ('rd_val', OP_AL_32I.cpp:58) ('rd_val', OP_AL_32I.cpp:56) ('rd_val', OP_AL_32I.cpp:55) ('rd_val', OP_AL_32I.cpp:54) ('zext_ln53', OP_AL_32I.cpp:53) ('zext_ln52', OP_AL_32I.cpp:52) ('rd_val', OP_AL_32I.cpp:51) ('shr_i4', OP_AL_32I.cpp:13) ('ashr_ln65', OP_AL_32I.cpp:65) ('lshr_ln64', OP_AL_32I.cpp:64) ('shl_ln64', OP_AL_32I.cpp:64) ('shr_i_i1943', OP_AL_32I.cpp:13) ('shl_ln37_1', OP_AL_32I.cpp:37) ('xor_ln37_1', OP_AL_32I.cpp:37) ('rd_val', OP_AL_32I.cpp:36) ('rd_val', OP_AL_32I.cpp:27) ('lshr_ln26', OP_AL_32I.cpp:26) ('shl_ln26', OP_AL_32I.cpp:26) ('rd_val', OP_AL_32I.cpp:25) ('zext_ln24', OP_AL_32I.cpp:24) ('zext_ln23', OP_AL_32I.cpp:23) ('shl_ln22', OP_AL_32I.cpp:22) ('ashr_ln22', OP_AL_32I.cpp:22) ('rd_val', OP_AL_32I.cpp:21) ('rd_val', OP_AL_32I.cpp:28) [138]  (1.913 ns)
	'phi' operation 32 bit ('rd_val') with incoming values : ('rd_val', OP_AL_32I.cpp:58) ('rd_val', OP_AL_32I.cpp:56) ('rd_val', OP_AL_32I.cpp:55) ('rd_val', OP_AL_32I.cpp:54) ('zext_ln53', OP_AL_32I.cpp:53) ('zext_ln52', OP_AL_32I.cpp:52) ('rd_val', OP_AL_32I.cpp:51) ('shr_i4', OP_AL_32I.cpp:13) ('ashr_ln65', OP_AL_32I.cpp:65) ('lshr_ln64', OP_AL_32I.cpp:64) ('shl_ln64', OP_AL_32I.cpp:64) ('shr_i_i1943', OP_AL_32I.cpp:13) ('shl_ln37_1', OP_AL_32I.cpp:37) ('xor_ln37_1', OP_AL_32I.cpp:37) ('rd_val', OP_AL_32I.cpp:36) ('rd_val', OP_AL_32I.cpp:27) ('lshr_ln26', OP_AL_32I.cpp:26) ('shl_ln26', OP_AL_32I.cpp:26) ('rd_val', OP_AL_32I.cpp:25) ('zext_ln24', OP_AL_32I.cpp:24) ('zext_ln23', OP_AL_32I.cpp:23) ('shl_ln22', OP_AL_32I.cpp:22) ('ashr_ln22', OP_AL_32I.cpp:22) ('rd_val', OP_AL_32I.cpp:21) ('rd_val', OP_AL_32I.cpp:28) [138]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
