

================================================================
== Vitis HLS Report for 'OP_AL_32I'
================================================================
* Date:           Tue Apr 16 19:23:54 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        Project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.595 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.59>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%op2_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op2"   --->   Operation 2 'read' 'op2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%op1_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op1"   --->   Operation 3 'read' 'op1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%func3_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %func3"   --->   Operation 4 'read' 'func3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%func7_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %func7"   --->   Operation 5 'read' 'func7_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%opcode_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %opcode"   --->   Operation 6 'read' 'opcode_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%shamt = trunc i32 %op2_read"   --->   Operation 7 'trunc' 'shamt' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op2_read, i32 31"   --->   Operation 8 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.73ns)   --->   "%switch_ln16 = switch i7 %opcode_read, void %sw.epilog136, i7 51, void %sw.bb, i7 19, void %sw.bb65" [OP_AL_32I.cpp:16]   --->   Operation 9 'switch' 'switch_ln16' <Predicate = true> <Delay = 0.73>
ST_1 : Operation 10 [1/1] (0.40ns)   --->   "%switch_ln50 = switch i3 %func3_read, void %sw.bb114, i3 0, void %sw.bb67, i3 2, void %sw.bb70, i3 3, void %sw.bb86, i3 4, void %sw.bb104, i3 6, void %sw.bb106, i3 7, void %sw.bb108, i3 1, void %sw.bb110" [OP_AL_32I.cpp:50]   --->   Operation 10 'switch' 'switch_ln50' <Predicate = (opcode_read == 19)> <Delay = 0.40>
ST_1 : Operation 11 [1/1] (0.76ns)   --->   "%icmp_ln1019 = icmp_eq  i7 %func7_read, i7 0"   --->   Operation 11 'icmp' 'icmp_ln1019' <Predicate = (opcode_read == 19 & func3_read == 1)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.73ns)   --->   "%br_ln58 = br i1 %icmp_ln1019, void %sw.epilog136, void %if.then" [OP_AL_32I.cpp:58]   --->   Operation 12 'br' 'br_ln58' <Predicate = (opcode_read == 19 & func3_read == 1)> <Delay = 0.73>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln553 = zext i6 %shamt"   --->   Operation 13 'zext' 'zext_ln553' <Predicate = (opcode_read == 19 & func3_read == 1 & icmp_ln1019)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.18ns)   --->   "%r_V_19 = shl i32 %op1_read, i32 %zext_ln553"   --->   Operation 14 'shl' 'r_V_19' <Predicate = (opcode_read == 19 & func3_read == 1 & icmp_ln1019)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.73ns)   --->   "%br_ln58 = br void %sw.epilog136" [OP_AL_32I.cpp:58]   --->   Operation 15 'br' 'br_ln58' <Predicate = (opcode_read == 19 & func3_read == 1 & icmp_ln1019)> <Delay = 0.73>
ST_1 : Operation 16 [1/1] (0.31ns)   --->   "%ret_V_9 = and i32 %op2_read, i32 %op1_read"   --->   Operation 16 'and' 'ret_V_9' <Predicate = (opcode_read == 19 & func3_read == 7)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.73ns)   --->   "%br_ln56 = br void %sw.epilog136" [OP_AL_32I.cpp:56]   --->   Operation 17 'br' 'br_ln56' <Predicate = (opcode_read == 19 & func3_read == 7)> <Delay = 0.73>
ST_1 : Operation 18 [1/1] (0.31ns)   --->   "%ret_V_8 = or i32 %op2_read, i32 %op1_read"   --->   Operation 18 'or' 'ret_V_8' <Predicate = (opcode_read == 19 & func3_read == 6)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.73ns)   --->   "%br_ln55 = br void %sw.epilog136" [OP_AL_32I.cpp:55]   --->   Operation 19 'br' 'br_ln55' <Predicate = (opcode_read == 19 & func3_read == 6)> <Delay = 0.73>
ST_1 : Operation 20 [1/1] (0.31ns)   --->   "%ret_V_7 = xor i32 %op2_read, i32 %op1_read"   --->   Operation 20 'xor' 'ret_V_7' <Predicate = (opcode_read == 19 & func3_read == 4)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.73ns)   --->   "%br_ln54 = br void %sw.epilog136" [OP_AL_32I.cpp:54]   --->   Operation 21 'br' 'br_ln54' <Predicate = (opcode_read == 19 & func3_read == 4)> <Delay = 0.73>
ST_1 : Operation 22 [1/1] (1.05ns)   --->   "%rd_val_V_2 = icmp_ugt  i32 %op2_read, i32 %op1_read"   --->   Operation 22 'icmp' 'rd_val_V_2' <Predicate = (opcode_read == 19 & func3_read == 3)> <Delay = 1.05> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i1 %rd_val_V_2" [OP_AL_32I.cpp:53]   --->   Operation 23 'zext' 'zext_ln53' <Predicate = (opcode_read == 19 & func3_read == 3)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.73ns)   --->   "%br_ln53 = br void %sw.epilog136" [OP_AL_32I.cpp:53]   --->   Operation 24 'br' 'br_ln53' <Predicate = (opcode_read == 19 & func3_read == 3)> <Delay = 0.73>
ST_1 : Operation 25 [1/1] (1.05ns)   --->   "%rd_val_V_1 = icmp_sgt  i32 %op2_read, i32 %op1_read"   --->   Operation 25 'icmp' 'rd_val_V_1' <Predicate = (opcode_read == 19 & func3_read == 2)> <Delay = 1.05> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i1 %rd_val_V_1" [OP_AL_32I.cpp:52]   --->   Operation 26 'zext' 'zext_ln52' <Predicate = (opcode_read == 19 & func3_read == 2)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.73ns)   --->   "%br_ln52 = br void %sw.epilog136" [OP_AL_32I.cpp:52]   --->   Operation 27 'br' 'br_ln52' <Predicate = (opcode_read == 19 & func3_read == 2)> <Delay = 0.73>
ST_1 : Operation 28 [1/1] (0.95ns)   --->   "%rd_val_V = add i32 %op2_read, i32 %op1_read" [OP_AL_32I.cpp:51]   --->   Operation 28 'add' 'rd_val_V' <Predicate = (opcode_read == 19 & func3_read == 0)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.73ns)   --->   "%br_ln51 = br void %sw.epilog136" [OP_AL_32I.cpp:51]   --->   Operation 29 'br' 'br_ln51' <Predicate = (opcode_read == 19 & func3_read == 0)> <Delay = 0.73>
ST_1 : Operation 30 [1/1] (0.73ns)   --->   "%switch_ln64 = switch i7 %func7_read, void %sw.epilog136, i7 0, void %sw.bb116, i7 32, void %sw.bb120" [OP_AL_32I.cpp:64]   --->   Operation 30 'switch' 'switch_ln64' <Predicate = (opcode_read == 19 & func3_read == 5)> <Delay = 0.73>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op1_read, i32 31"   --->   Operation 31 'bitselect' 'tmp_5' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 32)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln553_1 = zext i6 %shamt"   --->   Operation 32 'zext' 'zext_ln553_1' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 32)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln69 = br i1 %tmp_5, void %cond.false126, void %cond.true123" [OP_AL_32I.cpp:69]   --->   Operation 33 'br' 'br_ln69' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 32)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.18ns)   --->   "%r_V_14 = lshr i32 %op1_read, i32 %zext_ln553_1"   --->   Operation 34 'lshr' 'r_V_14' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 32 & !tmp_5)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.73ns)   --->   "%br_ln69 = br void %sw.epilog136" [OP_AL_32I.cpp:69]   --->   Operation 35 'br' 'br_ln69' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 32 & !tmp_5)> <Delay = 0.73>
ST_1 : Operation 36 [1/1] (1.18ns)   --->   "%r_V_13 = ashr i32 %op1_read, i32 %zext_ln553_1"   --->   Operation 36 'ashr' 'r_V_13' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 32 & tmp_5)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.73ns)   --->   "%br_ln69 = br void %sw.epilog136" [OP_AL_32I.cpp:69]   --->   Operation 37 'br' 'br_ln69' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 32 & tmp_5)> <Delay = 0.73>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln938 = br i1 %p_Result_s, void %if.end.i, void %if.then.i"   --->   Operation 38 'br' 'br_ln938' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 0)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (1.18ns)   --->   "%r_V_12 = lshr i32 %op1_read, i32 %op2_read"   --->   Operation 39 'lshr' 'r_V_12' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 0 & !p_Result_s)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.73ns)   --->   "%br_ln942 = br void %sw.epilog136"   --->   Operation 40 'br' 'br_ln942' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 0 & !p_Result_s)> <Delay = 0.73>
ST_1 : Operation 41 [1/1] (0.95ns)   --->   "%sh_2 = sub i32 0, i32 %op2_read"   --->   Operation 41 'sub' 'sh_2' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 0 & p_Result_s)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (1.18ns)   --->   "%r_V_10 = shl i32 %op1_read, i32 %sh_2"   --->   Operation 42 'shl' 'r_V_10' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 0 & p_Result_s)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.73ns)   --->   "%br_ln940 = br void %sw.epilog136"   --->   Operation 43 'br' 'br_ln940' <Predicate = (opcode_read == 19 & func3_read == 5 & func7_read == 0 & p_Result_s)> <Delay = 0.73>
ST_1 : Operation 44 [1/1] (0.73ns)   --->   "%switch_ln18 = switch i7 %func7_read, void %sw.epilog136, i7 0, void %sw.bb3, i7 32, void %sw.bb46" [OP_AL_32I.cpp:18]   --->   Operation 44 'switch' 'switch_ln18' <Predicate = (opcode_read == 51)> <Delay = 0.73>
ST_1 : Operation 45 [1/1] (0.73ns)   --->   "%switch_ln35 = switch i3 %func3_read, void %sw.epilog136, i3 0, void %sw.bb48, i3 5, void %sw.bb51" [OP_AL_32I.cpp:35]   --->   Operation 45 'switch' 'switch_ln35' <Predicate = (opcode_read == 51 & func7_read == 32)> <Delay = 0.73>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op1_read, i32 31"   --->   Operation 46 'bitselect' 'tmp' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %tmp, void %cond.false57, void %cond.true54" [OP_AL_32I.cpp:37]   --->   Operation 47 'br' 'br_ln37' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln938 = br i1 %p_Result_s, void %if.end.i191, void %if.then.i184"   --->   Operation 48 'br' 'br_ln938' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & !tmp)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (1.18ns)   --->   "%r_V_11 = lshr i32 %op1_read, i32 %op2_read"   --->   Operation 49 'lshr' 'r_V_11' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & !p_Result_s & !tmp)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.73ns)   --->   "%br_ln942 = br void %sw.epilog136"   --->   Operation 50 'br' 'br_ln942' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & !p_Result_s & !tmp)> <Delay = 0.73>
ST_1 : Operation 51 [1/1] (0.95ns)   --->   "%sh_4 = sub i32 0, i32 %op2_read"   --->   Operation 51 'sub' 'sh_4' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & p_Result_s & !tmp)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (1.18ns)   --->   "%r_V_17 = shl i32 %op1_read, i32 %sh_4"   --->   Operation 52 'shl' 'r_V_17' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & p_Result_s & !tmp)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.73ns)   --->   "%br_ln940 = br void %sw.epilog136"   --->   Operation 53 'br' 'br_ln940' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & p_Result_s & !tmp)> <Delay = 0.73>
ST_1 : Operation 54 [1/1] (0.31ns)   --->   "%r_V_9 = xor i32 %op1_read, i32 4294967295"   --->   Operation 54 'xor' 'r_V_9' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & tmp)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln938 = br i1 %p_Result_s, void %if.end.i248, void %if.then.i241"   --->   Operation 55 'br' 'br_ln938' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & tmp)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (1.18ns)   --->   "%r_V_16 = ashr i32 %r_V_9, i32 %op2_read"   --->   Operation 56 'ashr' 'r_V_16' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & !p_Result_s & tmp)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.40ns)   --->   "%br_ln942 = br void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit249"   --->   Operation 57 'br' 'br_ln942' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & !p_Result_s & tmp)> <Delay = 0.40>
ST_1 : Operation 58 [1/1] (0.95ns)   --->   "%sh_3 = sub i32 0, i32 %op2_read"   --->   Operation 58 'sub' 'sh_3' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & p_Result_s & tmp)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (1.18ns)   --->   "%r_V_15 = shl i32 %r_V_9, i32 %sh_3"   --->   Operation 59 'shl' 'r_V_15' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & p_Result_s & tmp)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.40ns)   --->   "%br_ln940 = br void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit249"   --->   Operation 60 'br' 'br_ln940' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & p_Result_s & tmp)> <Delay = 0.40>
ST_1 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node r_V_18)   --->   "%tmp56_0 = phi i32 %r_V_15, void %if.then.i241, i32 %r_V_16, void %if.end.i248"   --->   Operation 61 'phi' 'tmp56_0' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & tmp)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.31ns) (out node of the LUT)   --->   "%r_V_18 = xor i32 %tmp56_0, i32 4294967295"   --->   Operation 62 'xor' 'r_V_18' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & tmp)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.73ns)   --->   "%br_ln37 = br void %sw.epilog136" [OP_AL_32I.cpp:37]   --->   Operation 63 'br' 'br_ln37' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 32 & tmp)> <Delay = 0.73>
ST_1 : Operation 64 [1/1] (0.95ns)   --->   "%rd_val_V_12 = sub i32 %op1_read, i32 %op2_read" [OP_AL_32I.cpp:36]   --->   Operation 64 'sub' 'rd_val_V_12' <Predicate = (opcode_read == 51 & func3_read == 0 & func7_read == 32)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.73ns)   --->   "%br_ln36 = br void %sw.epilog136" [OP_AL_32I.cpp:36]   --->   Operation 65 'br' 'br_ln36' <Predicate = (opcode_read == 51 & func3_read == 0 & func7_read == 32)> <Delay = 0.73>
ST_1 : Operation 66 [1/1] (0.40ns)   --->   "%switch_ln20 = switch i3 %func3_read, void %sw.bb43, i3 0, void %sw.bb5, i3 1, void %sw.bb8, i3 2, void %sw.bb10, i3 3, void %sw.bb18, i3 4, void %sw.bb35, i3 5, void %sw.bb37, i3 6, void %sw.bb41" [OP_AL_32I.cpp:20]   --->   Operation 66 'switch' 'switch_ln20' <Predicate = (opcode_read == 51 & func7_read == 0)> <Delay = 0.40>
ST_1 : Operation 67 [1/1] (0.31ns)   --->   "%ret_V_5 = or i32 %op1_read, i32 %op2_read"   --->   Operation 67 'or' 'ret_V_5' <Predicate = (opcode_read == 51 & func3_read == 6 & func7_read == 0)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.73ns)   --->   "%br_ln27 = br void %sw.epilog136" [OP_AL_32I.cpp:27]   --->   Operation 68 'br' 'br_ln27' <Predicate = (opcode_read == 51 & func3_read == 6 & func7_read == 0)> <Delay = 0.73>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln938 = br i1 %p_Result_s, void %if.end.i371, void %if.then.i364"   --->   Operation 69 'br' 'br_ln938' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 0)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (1.18ns)   --->   "%r_V_8 = lshr i32 %op1_read, i32 %op2_read"   --->   Operation 70 'lshr' 'r_V_8' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 0 & !p_Result_s)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.73ns)   --->   "%br_ln942 = br void %sw.epilog136"   --->   Operation 71 'br' 'br_ln942' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 0 & !p_Result_s)> <Delay = 0.73>
ST_1 : Operation 72 [1/1] (0.95ns)   --->   "%sh_1 = sub i32 0, i32 %op2_read"   --->   Operation 72 'sub' 'sh_1' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 0 & p_Result_s)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 73 [1/1] (1.18ns)   --->   "%r_V_7 = shl i32 %op1_read, i32 %sh_1"   --->   Operation 73 'shl' 'r_V_7' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 0 & p_Result_s)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.73ns)   --->   "%br_ln940 = br void %sw.epilog136"   --->   Operation 74 'br' 'br_ln940' <Predicate = (opcode_read == 51 & func3_read == 5 & func7_read == 0 & p_Result_s)> <Delay = 0.73>
ST_1 : Operation 75 [1/1] (0.31ns)   --->   "%ret_V = xor i32 %op1_read, i32 %op2_read"   --->   Operation 75 'xor' 'ret_V' <Predicate = (opcode_read == 51 & func3_read == 4 & func7_read == 0)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.73ns)   --->   "%br_ln25 = br void %sw.epilog136" [OP_AL_32I.cpp:25]   --->   Operation 76 'br' 'br_ln25' <Predicate = (opcode_read == 51 & func3_read == 4 & func7_read == 0)> <Delay = 0.73>
ST_1 : Operation 77 [1/1] (1.05ns)   --->   "%rd_val_V_9 = icmp_ult  i32 %op1_read, i32 %op2_read"   --->   Operation 77 'icmp' 'rd_val_V_9' <Predicate = (opcode_read == 51 & func3_read == 3 & func7_read == 0)> <Delay = 1.05> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i1 %rd_val_V_9" [OP_AL_32I.cpp:24]   --->   Operation 78 'zext' 'zext_ln24' <Predicate = (opcode_read == 51 & func3_read == 3 & func7_read == 0)> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.73ns)   --->   "%br_ln24 = br void %sw.epilog136" [OP_AL_32I.cpp:24]   --->   Operation 79 'br' 'br_ln24' <Predicate = (opcode_read == 51 & func3_read == 3 & func7_read == 0)> <Delay = 0.73>
ST_1 : Operation 80 [1/1] (1.05ns)   --->   "%rd_val_V_8 = icmp_slt  i32 %op1_read, i32 %op2_read"   --->   Operation 80 'icmp' 'rd_val_V_8' <Predicate = (opcode_read == 51 & func3_read == 2 & func7_read == 0)> <Delay = 1.05> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i1 %rd_val_V_8" [OP_AL_32I.cpp:23]   --->   Operation 81 'zext' 'zext_ln23' <Predicate = (opcode_read == 51 & func3_read == 2 & func7_read == 0)> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.73ns)   --->   "%br_ln23 = br void %sw.epilog136" [OP_AL_32I.cpp:23]   --->   Operation 82 'br' 'br_ln23' <Predicate = (opcode_read == 51 & func3_read == 2 & func7_read == 0)> <Delay = 0.73>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln920 = br i1 %p_Result_s, void %if.else.i, void %if.then.i454"   --->   Operation 83 'br' 'br_ln920' <Predicate = (opcode_read == 51 & func3_read == 1 & func7_read == 0)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (1.18ns)   --->   "%r_V_6 = shl i32 %op1_read, i32 %op2_read"   --->   Operation 84 'shl' 'r_V_6' <Predicate = (opcode_read == 51 & func3_read == 1 & func7_read == 0 & !p_Result_s)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.73ns)   --->   "%br_ln924 = br void %sw.epilog136"   --->   Operation 85 'br' 'br_ln924' <Predicate = (opcode_read == 51 & func3_read == 1 & func7_read == 0 & !p_Result_s)> <Delay = 0.73>
ST_1 : Operation 86 [1/1] (0.95ns)   --->   "%sh = sub i32 0, i32 %op2_read"   --->   Operation 86 'sub' 'sh' <Predicate = (opcode_read == 51 & func3_read == 1 & func7_read == 0 & p_Result_s)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (1.18ns)   --->   "%r_V = ashr i32 %op1_read, i32 %sh"   --->   Operation 87 'ashr' 'r_V' <Predicate = (opcode_read == 51 & func3_read == 1 & func7_read == 0 & p_Result_s)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.73ns)   --->   "%br_ln922 = br void %sw.epilog136"   --->   Operation 88 'br' 'br_ln922' <Predicate = (opcode_read == 51 & func3_read == 1 & func7_read == 0 & p_Result_s)> <Delay = 0.73>
ST_1 : Operation 89 [1/1] (0.95ns)   --->   "%rd_val_V_7 = add i32 %op1_read, i32 %op2_read" [OP_AL_32I.cpp:21]   --->   Operation 89 'add' 'rd_val_V_7' <Predicate = (opcode_read == 51 & func3_read == 0 & func7_read == 0)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.73ns)   --->   "%br_ln21 = br void %sw.epilog136" [OP_AL_32I.cpp:21]   --->   Operation 90 'br' 'br_ln21' <Predicate = (opcode_read == 51 & func3_read == 0 & func7_read == 0)> <Delay = 0.73>
ST_1 : Operation 91 [1/1] (0.31ns)   --->   "%ret_V_6 = and i32 %op1_read, i32 %op2_read"   --->   Operation 91 'and' 'ret_V_6' <Predicate = (opcode_read == 51 & func3_read == 7 & func7_read == 0)> <Delay = 0.31> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.31> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.73ns)   --->   "%br_ln28 = br void %sw.epilog136" [OP_AL_32I.cpp:28]   --->   Operation 92 'br' 'br_ln28' <Predicate = (opcode_read == 51 & func3_read == 7 & func7_read == 0)> <Delay = 0.73>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%rd_val_V_14 = phi i32 %ret_V_9, void %sw.bb108, i32 %ret_V_8, void %sw.bb106, i32 %ret_V_7, void %sw.bb104, i32 %zext_ln53, void %sw.bb86, i32 %zext_ln52, void %sw.bb70, i32 %rd_val_V, void %sw.bb67, i32 %r_V_13, void %cond.true123, i32 %r_V_14, void %cond.false126, i32 %r_V_10, void %if.then.i, i32 %r_V_12, void %if.end.i, i32 %r_V_19, void %if.then, i32 %rd_val_V_12, void %sw.bb48, i32 %r_V_18, void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit249, i32 %r_V_17, void %if.then.i184, i32 %r_V_11, void %if.end.i191, i32 %ret_V_6, void %sw.bb43, i32 %ret_V_5, void %sw.bb41, i32 %ret_V, void %sw.bb35, i32 %zext_ln24, void %sw.bb18, i32 %zext_ln23, void %sw.bb10, i32 %rd_val_V_7, void %sw.bb5, i32 %r_V_7, void %if.then.i364, i32 %r_V_8, void %if.end.i371, i32 %r_V, void %if.then.i454, i32 %r_V_6, void %if.else.i, i32 0, void %entry, i32 0, void %sw.bb, i32 0, void %sw.bb46, i32 0, void %sw.bb110, i32 0, void %sw.bb114"   --->   Operation 93 'phi' 'rd_val_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%status_V = phi i1 0, void %sw.bb108, i1 0, void %sw.bb106, i1 0, void %sw.bb104, i1 0, void %sw.bb86, i1 0, void %sw.bb70, i1 0, void %sw.bb67, i1 0, void %cond.true123, i1 0, void %cond.false126, i1 0, void %if.then.i, i1 0, void %if.end.i, i1 0, void %if.then, i1 0, void %sw.bb48, i1 0, void %_ZNK11ap_int_baseILi32ELb1EErsILi32EEE6ap_intILi32EERKS_IXT_ELb1EE.exit249, i1 0, void %if.then.i184, i1 0, void %if.end.i191, i1 0, void %sw.bb43, i1 0, void %sw.bb41, i1 0, void %sw.bb35, i1 0, void %sw.bb18, i1 0, void %sw.bb10, i1 0, void %sw.bb5, i1 0, void %if.then.i364, i1 0, void %if.end.i371, i1 0, void %if.then.i454, i1 0, void %if.else.i, i1 1, void %entry, i1 1, void %sw.bb, i1 1, void %sw.bb46, i1 1, void %sw.bb110, i1 1, void %sw.bb114"   --->   Operation 94 'phi' 'status_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%newret = insertvalue i33 <undef>, i32 %rd_val_V_14"   --->   Operation 95 'insertvalue' 'newret' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%newret2 = insertvalue i33 %newret, i1 %status_V"   --->   Operation 96 'insertvalue' 'newret2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%ret_ln1497 = ret i33 %newret2"   --->   Operation 97 'ret' 'ret_ln1497' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.59ns
The critical path consists of the following:
	wire read operation ('op2.V') on port 'op2' [6]  (0 ns)
	'sub' operation ('sh') [87]  (0.953 ns)
	'shl' operation ('r.V') [88]  (1.18 ns)
	multiplexor before 'phi' operation ('r.V') with incoming values : ('r.V') [91]  (0.402 ns)
	'phi' operation ('r.V') with incoming values : ('r.V') [91]  (0 ns)
	'xor' operation ('r.V') [92]  (0.319 ns)
	multiplexor before 'phi' operation ('r.V') with incoming values : ('r.V') ('ret.V') ('zext_ln53', OP_AL_32I.cpp:53) ('zext_ln52', OP_AL_32I.cpp:52) ('rd_val.V', OP_AL_32I.cpp:51) ('rd_val.V', OP_AL_32I.cpp:36) ('zext_ln24', OP_AL_32I.cpp:24) ('zext_ln23', OP_AL_32I.cpp:23) ('rd_val.V', OP_AL_32I.cpp:21) [138]  (0.739 ns)
	'phi' operation ('r.V') with incoming values : ('r.V') ('ret.V') ('zext_ln53', OP_AL_32I.cpp:53) ('zext_ln52', OP_AL_32I.cpp:52) ('rd_val.V', OP_AL_32I.cpp:51) ('rd_val.V', OP_AL_32I.cpp:36) ('zext_ln24', OP_AL_32I.cpp:24) ('zext_ln23', OP_AL_32I.cpp:23) ('rd_val.V', OP_AL_32I.cpp:21) [138]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
