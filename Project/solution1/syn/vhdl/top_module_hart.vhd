-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_module_hart is
port (
    ap_ready : OUT STD_LOGIC;
    inst_val : IN STD_LOGIC_VECTOR (31 downto 0);
    pc_val : IN STD_LOGIC_VECTOR (31 downto 0);
    op1_val : IN STD_LOGIC_VECTOR (31 downto 0);
    op2_val : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of top_module_hart is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv14_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_const_lv13_4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal call_ret_OP_AL_32I_fu_234_ap_ready : STD_LOGIC;
    signal call_ret_OP_AL_32I_fu_234_func7_val : STD_LOGIC_VECTOR (6 downto 0);
    signal call_ret_OP_AL_32I_fu_234_func3_val : STD_LOGIC_VECTOR (2 downto 0);
    signal call_ret_OP_AL_32I_fu_234_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_OP_AL_32I_fu_234_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_agg_result_result_0_phi_fu_129_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal opcode_fu_260_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln30_fu_441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1_fu_448_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal func3_fu_264_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_424_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln27_fu_392_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln5_5_fu_485_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln5_4_fu_512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln5_3_fu_537_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln5_2_fu_556_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln5_1_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln5_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_agg_result_valid_0_phi_fu_198_p24 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal imm_31_12_fu_286_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_fu_300_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_316_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_326_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_350_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_368_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_378_p6 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_6_fu_404_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln34_fu_414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_fu_418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln21_fu_296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln30_fu_435_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln14_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln3_fu_463_p6 : STD_LOGIC_VECTOR (13 downto 0);
    signal mdf_5_fu_477_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln2_fu_490_p6 : STD_LOGIC_VECTOR (13 downto 0);
    signal mdf_4_fu_504_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln12_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln12_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal imm_fu_336_p6 : STD_LOGIC_VECTOR (12 downto 0);
    signal mdf_3_fu_529_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln11_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mdf_2_fu_548_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln10_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mdf_1_fu_567_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln9_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mdf_fu_586_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component top_module_OP_AL_32I IS
    port (
        ap_ready : OUT STD_LOGIC;
        inst_val : IN STD_LOGIC_VECTOR (31 downto 0);
        func7_val : IN STD_LOGIC_VECTOR (6 downto 0);
        func3_val : IN STD_LOGIC_VECTOR (2 downto 0);
        op1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        op2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    call_ret_OP_AL_32I_fu_234 : component top_module_OP_AL_32I
    port map (
        ap_ready => call_ret_OP_AL_32I_fu_234_ap_ready,
        inst_val => inst_val,
        func7_val => call_ret_OP_AL_32I_fu_234_func7_val,
        func3_val => call_ret_OP_AL_32I_fu_234_func3_val,
        op1_val => op1_val,
        op2_val => op2_val,
        ap_return_0 => call_ret_OP_AL_32I_fu_234_ap_return_0,
        ap_return_1 => call_ret_OP_AL_32I_fu_234_ap_return_1);




    add_ln30_fu_435_p2 <= std_logic_vector(unsigned(pc_val) + unsigned(ap_const_lv32_C));
    add_ln34_fu_418_p2 <= std_logic_vector(unsigned(zext_ln34_fu_414_p1) + unsigned(op1_val));

    ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24_assign_proc : process(opcode_fu_260_p1, func3_fu_264_p4, tmp_7_fu_424_p4, sext_ln27_fu_392_p1, sext_ln5_5_fu_485_p1, sext_ln5_4_fu_512_p1, sext_ln5_3_fu_537_p1, sext_ln5_2_fu_556_p1, sext_ln5_1_fu_575_p1, sext_ln5_fu_594_p1)
    begin
        if (((func3_fu_264_p4 = ap_const_lv3_0) and (opcode_fu_260_p1 = ap_const_lv7_63))) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= sext_ln5_fu_594_p1;
        elsif (((func3_fu_264_p4 = ap_const_lv3_1) and (opcode_fu_260_p1 = ap_const_lv7_63))) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= sext_ln5_1_fu_575_p1;
        elsif (((func3_fu_264_p4 = ap_const_lv3_4) and (opcode_fu_260_p1 = ap_const_lv7_63))) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= sext_ln5_2_fu_556_p1;
        elsif (((func3_fu_264_p4 = ap_const_lv3_5) and (opcode_fu_260_p1 = ap_const_lv7_63))) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= sext_ln5_3_fu_537_p1;
        elsif (((func3_fu_264_p4 = ap_const_lv3_6) and (opcode_fu_260_p1 = ap_const_lv7_63))) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= sext_ln5_4_fu_512_p1;
        elsif (((func3_fu_264_p4 = ap_const_lv3_7) and (opcode_fu_260_p1 = ap_const_lv7_63))) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= sext_ln5_5_fu_485_p1;
        elsif ((((func3_fu_264_p4 = ap_const_lv3_2) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_3) and (opcode_fu_260_p1 = ap_const_lv7_63)))) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= ap_const_lv32_0;
        elsif ((opcode_fu_260_p1 = ap_const_lv7_6F)) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= sext_ln27_fu_392_p1;
        elsif ((opcode_fu_260_p1 = ap_const_lv7_67)) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= tmp_7_fu_424_p4;
        elsif (((opcode_fu_260_p1 = ap_const_lv7_17) or (opcode_fu_260_p1 = ap_const_lv7_37) or (not((opcode_fu_260_p1 = ap_const_lv7_67)) and not((opcode_fu_260_p1 = ap_const_lv7_6F)) and not((opcode_fu_260_p1 = ap_const_lv7_17)) and not((opcode_fu_260_p1 = ap_const_lv7_37)) and not((opcode_fu_260_p1 = ap_const_lv7_63))))) then 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= ap_const_lv32_4;
        else 
            ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_agg_result_result_0_phi_fu_129_p24_assign_proc : process(call_ret_OP_AL_32I_fu_234_ap_return_0, opcode_fu_260_p1, grp_fu_246_p2, shl_ln30_fu_441_p2, shl_ln1_fu_448_p3, func3_fu_264_p4)
    begin
        if ((((func3_fu_264_p4 = ap_const_lv3_0) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_1) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_4) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_5) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_6) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_7) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_2) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_3) and (opcode_fu_260_p1 = ap_const_lv7_63)))) then 
            ap_phi_mux_agg_result_result_0_phi_fu_129_p24 <= ap_const_lv32_0;
        elsif ((opcode_fu_260_p1 = ap_const_lv7_37)) then 
            ap_phi_mux_agg_result_result_0_phi_fu_129_p24 <= shl_ln1_fu_448_p3;
        elsif ((opcode_fu_260_p1 = ap_const_lv7_17)) then 
            ap_phi_mux_agg_result_result_0_phi_fu_129_p24 <= shl_ln30_fu_441_p2;
        elsif (((opcode_fu_260_p1 = ap_const_lv7_67) or (opcode_fu_260_p1 = ap_const_lv7_6F))) then 
            ap_phi_mux_agg_result_result_0_phi_fu_129_p24 <= grp_fu_246_p2;
        elsif ((not((opcode_fu_260_p1 = ap_const_lv7_67)) and not((opcode_fu_260_p1 = ap_const_lv7_6F)) and not((opcode_fu_260_p1 = ap_const_lv7_17)) and not((opcode_fu_260_p1 = ap_const_lv7_37)) and not((opcode_fu_260_p1 = ap_const_lv7_63)))) then 
            ap_phi_mux_agg_result_result_0_phi_fu_129_p24 <= call_ret_OP_AL_32I_fu_234_ap_return_0;
        else 
            ap_phi_mux_agg_result_result_0_phi_fu_129_p24 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_agg_result_valid_0_phi_fu_198_p24_assign_proc : process(call_ret_OP_AL_32I_fu_234_ap_return_1, opcode_fu_260_p1, func3_fu_264_p4, icmp_ln32_fu_397_p2)
    begin
        if ((((func3_fu_264_p4 = ap_const_lv3_2) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_3) and (opcode_fu_260_p1 = ap_const_lv7_63)))) then 
            ap_phi_mux_agg_result_valid_0_phi_fu_198_p24 <= ap_const_lv1_0;
        elsif (((opcode_fu_260_p1 = ap_const_lv7_6F) or (opcode_fu_260_p1 = ap_const_lv7_17) or (opcode_fu_260_p1 = ap_const_lv7_37) or ((func3_fu_264_p4 = ap_const_lv3_0) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_1) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_4) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_5) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_6) and (opcode_fu_260_p1 = ap_const_lv7_63)) or ((func3_fu_264_p4 = ap_const_lv3_7) and (opcode_fu_260_p1 = ap_const_lv7_63)))) then 
            ap_phi_mux_agg_result_valid_0_phi_fu_198_p24 <= ap_const_lv1_1;
        elsif ((opcode_fu_260_p1 = ap_const_lv7_67)) then 
            ap_phi_mux_agg_result_valid_0_phi_fu_198_p24 <= icmp_ln32_fu_397_p2;
        elsif ((not((opcode_fu_260_p1 = ap_const_lv7_67)) and not((opcode_fu_260_p1 = ap_const_lv7_6F)) and not((opcode_fu_260_p1 = ap_const_lv7_17)) and not((opcode_fu_260_p1 = ap_const_lv7_37)) and not((opcode_fu_260_p1 = ap_const_lv7_63)))) then 
            ap_phi_mux_agg_result_valid_0_phi_fu_198_p24 <= call_ret_OP_AL_32I_fu_234_ap_return_1;
        else 
            ap_phi_mux_agg_result_valid_0_phi_fu_198_p24 <= "X";
        end if; 
    end process;

    ap_ready <= ap_const_logic_1;
    ap_return_0 <= ap_phi_mux_agg_result_result_0_phi_fu_129_p24;
    ap_return_1 <= ap_phi_mux_agg_result_next_pc_0_phi_fu_165_p24;
    ap_return_2 <= ap_phi_mux_agg_result_valid_0_phi_fu_198_p24;
    call_ret_OP_AL_32I_fu_234_func3_val <= inst_val(14 downto 12);
    call_ret_OP_AL_32I_fu_234_func7_val <= inst_val(31 downto 25);
    func3_fu_264_p4 <= inst_val(14 downto 12);
    grp_fu_246_p2 <= std_logic_vector(unsigned(pc_val) + unsigned(ap_const_lv32_4));
    grp_fu_254_p2 <= "1" when (unsigned(op1_val) < unsigned(op2_val)) else "0";
    icmp_ln10_fu_561_p2 <= "0" when (op1_val = op2_val) else "1";
    icmp_ln11_fu_542_p2 <= "1" when (signed(op1_val) < signed(op2_val)) else "0";
    icmp_ln12_fu_517_p2 <= "1" when (signed(op2_val) < signed(op1_val)) else "0";
    icmp_ln32_fu_397_p2 <= "1" when (func3_fu_264_p4 = ap_const_lv3_0) else "0";
    icmp_ln9_fu_580_p2 <= "1" when (op1_val = op2_val) else "0";
    imm_31_12_fu_286_p4 <= inst_val(31 downto 12);
    imm_fu_336_p6 <= ((((tmp_fu_300_p3 & tmp_1_fu_308_p3) & tmp_s_fu_316_p4) & tmp_2_fu_326_p4) & ap_const_lv1_0);
    mdf_1_fu_567_p3 <= 
        imm_fu_336_p6 when (icmp_ln10_fu_561_p2(0) = '1') else 
        ap_const_lv13_4;
    mdf_2_fu_548_p3 <= 
        imm_fu_336_p6 when (icmp_ln11_fu_542_p2(0) = '1') else 
        ap_const_lv13_4;
    mdf_3_fu_529_p3 <= 
        imm_fu_336_p6 when (xor_ln12_fu_523_p2(0) = '1') else 
        ap_const_lv13_4;
    mdf_4_fu_504_p3 <= 
        shl_ln2_fu_490_p6 when (grp_fu_254_p2(0) = '1') else 
        ap_const_lv14_4;
    mdf_5_fu_477_p3 <= 
        shl_ln3_fu_463_p6 when (xor_ln14_fu_457_p2(0) = '1') else 
        ap_const_lv14_4;
    mdf_fu_586_p3 <= 
        imm_fu_336_p6 when (icmp_ln9_fu_580_p2(0) = '1') else 
        ap_const_lv13_4;
    opcode_fu_260_p1 <= inst_val(7 - 1 downto 0);
        sext_ln21_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_31_12_fu_286_p4),32));

        sext_ln27_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_378_p6),32));

        sext_ln5_1_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mdf_1_fu_567_p3),32));

        sext_ln5_2_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mdf_2_fu_548_p3),32));

        sext_ln5_3_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mdf_3_fu_529_p3),32));

        sext_ln5_4_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mdf_4_fu_504_p3),32));

        sext_ln5_5_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mdf_5_fu_477_p3),32));

        sext_ln5_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mdf_fu_586_p3),32));

    shl_ln1_fu_448_p3 <= (imm_31_12_fu_286_p4 & ap_const_lv12_0);
    shl_ln2_fu_490_p6 <= ((((tmp_fu_300_p3 & tmp_1_fu_308_p3) & tmp_s_fu_316_p4) & tmp_2_fu_326_p4) & ap_const_lv2_0);
    shl_ln30_fu_441_p2 <= std_logic_vector(shift_left(unsigned(sext_ln21_fu_296_p1),to_integer(unsigned('0' & add_ln30_fu_435_p2(31-1 downto 0)))));
    shl_ln3_fu_463_p6 <= ((((tmp_fu_300_p3 & tmp_1_fu_308_p3) & tmp_s_fu_316_p4) & tmp_2_fu_326_p4) & ap_const_lv2_0);
    shl_ln_fu_378_p6 <= ((((tmp_fu_300_p3 & tmp_3_fu_350_p4) & tmp_4_fu_360_p3) & tmp_5_fu_368_p4) & ap_const_lv1_0);
    tmp_1_fu_308_p3 <= inst_val(7 downto 7);
    tmp_2_fu_326_p4 <= inst_val(11 downto 8);
    tmp_3_fu_350_p4 <= inst_val(19 downto 12);
    tmp_4_fu_360_p3 <= inst_val(20 downto 20);
    tmp_5_fu_368_p4 <= inst_val(30 downto 21);
    tmp_6_fu_404_p4 <= inst_val(31 downto 20);
    
    tmp_7_fu_424_p4_proc : process(add_ln34_fu_418_p2)
    begin
        tmp_7_fu_424_p4 <= add_ln34_fu_418_p2;
        tmp_7_fu_424_p4(0) <= ap_const_lv1_0(0);
    end process;

    tmp_fu_300_p3 <= inst_val(31 downto 31);
    tmp_s_fu_316_p4 <= inst_val(30 downto 25);
    xor_ln12_fu_523_p2 <= (icmp_ln12_fu_517_p2 xor ap_const_lv1_1);
    xor_ln14_fu_457_p2 <= (grp_fu_254_p2 xor ap_const_lv1_1);
    zext_ln34_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_404_p4),32));
end behav;
